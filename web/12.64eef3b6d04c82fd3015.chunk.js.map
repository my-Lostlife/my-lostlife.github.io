{"version":3,"sources":["webpack:///./src/components/languageChangeButton.ts","webpack:///./src/helpers/blob/readBlobAsUint8Array.ts","webpack:///./src/helpers/blob/readBlobAsArrayBuffer.ts","webpack:///./src/lib/fileManager.ts","webpack:///./src/lib/cacheStorage.ts","webpack:///./src/helpers/fixBase64String.ts","webpack:///./src/components/telInputField.ts","webpack:///./src/components/monkeys/tracking.ts","webpack:///./src/components/codeInputField.ts","webpack:///./src/pages/pageSignIn.ts","webpack:///./src/pages/pageSignQR.ts","webpack:///./src/pages/pageAuthCode.ts","webpack:///./src/helpers/dom/replaceContent.ts","webpack:///./src/components/inputField.ts","webpack:///./src/helpers/dom/selectElementContents.ts","webpack:///./src/components/scrollable.ts","webpack:///./src/components/checkboxField.ts","webpack:///./src/components/singleTransition.ts","webpack:///./src/helpers/dom/toggleDisability.ts","webpack:///./src/helpers/dom/getRichValue.ts","webpack:///./src/helpers/dom/findUpTag.ts","webpack:///./src/helpers/dom/findUpAttribute.ts","webpack:///./src/helpers/dom/getRichElementValue.ts","webpack:///./src/helpers/dom/isInputEmpty.ts","webpack:///./src/lib/mtproto/serverTimeManager.ts","webpack:///./src/helpers/bytes.ts","webpack:///./src/helpers/dom/placeCaretAtEnd.ts","webpack:///./src/helpers/formatPhoneNumber.ts","webpack:///./src/helpers/blob/readBlobAs.ts"],"names":["cachedPromise","set","getLanguageChangeButton","appendTo","getConfig","then","config","suggested_lang_code","lastRequestedLangCode","Promise","all","getStrings","getCacheLangPack","strings","backup","forEach","string","backupString","get","key","push","btnChangeLanguage","text","lastElementChild","classList","remove","window","requestAnimationFrame","append","addEventListener","once","e","disabled","getLangPack","readBlobAsUint8Array","blob","readBlobAs","readBlobAsArrayBuffer","buffer","Uint8Array","blobSupported","blobConstruct","this","fileWriter","bytes","Blob","arr","write","mimeType","saveFileCallback","blobParts","part","truncate","length","finalize","saveToStorage","dbName","useStorage","test","STORAGES","openDatabase","openDbPromise","caches","open","entryName","timeoutOperation","cache","delete","match","response","put","fileName","method","Response","headers","size","save","callback","resolve","reject","rejected","timeout","setTimeout","undefined","res","err","clearTimeout","fakeWriter","getFakeFileWriter","saveFile","catch","enabled","map","storage","deleteAll","fixBase64String","str","toUrl","replace","TelInputField","options","super","label","name","pasted","lastValue","container","add","telEl","input","HTMLInputElement","type","autocomplete","inputMode","pixelRatio","devicePixelRatio","letterSpacing","style","setProperty","originalFunc","setValueSilently","bind","value","formattedPhoneNumber","Math","abs","setLabel","formatted","country","countryCode","leftPattern","code","dataset","onInput","metaKey","ctrlKey","shiftKey","preventDefault","TrackingMonkey","inputField","max","needFrame","document","createElement","playAnimation","animation","frame","min","round","idleAnimation","stop","canvas","display","direction","setDirection","setSpeed","play","loadPromise","loadAnimationAsAsset","loop","autoplay","width","height","waitForFirstFrame","_animation","currentFrame","pause","CodeInputField","plainText","setAttribute","lastLength","slice","onFill","btnQr","btnNext","page","setCountries","countries","countriesList","filter","pFlags","hidden","sort","a","b","default_name","localeCompare","liMap","Map","lastCountrySelected","lastCountryCodeSelected","inputWrapper","countryInputField","countryInput","selectWrapper","arrowDown","selectList","appendChild","initSelect","c","emoji","iso2","liArr","country_codes","li","wrapped","wrapEmojiText","spanEmoji","innerHTML","el","defaultName","span","innerText","country_code","button","target","selectCountryByTarget","childNodes","phoneCode","querySelector","find","_countryCode","telInputField","hidePicker","focus","hideTimeout","offsetWidth","select","pageEl","parentElement","element","position","margin","mouseDownHandlerAttached","onMouseDown","capture","removeEventListener","_value","toLowerCase","matches","names","Boolean","abbr","split","word","join","good","indexOf","cancelBubble","blur","loadLottieWorkers","countryName","visibility","onSubmit","signedCheckboxField","withRipple","checked","keepSigned","pushToState","toggleStorage","getState","state","isAvailable","toggle","phone_number","invokeApi","api_id","id","api_hash","hash","settings","_","m","default","mount","Object","assign","setError","console","error","h4","subtitle","nearestDcResult","langPack","getFromCache","lang_code","dcs","Set","done","this_dc","promise","nearest_dc","getNetworker","dcId","_dcs","g","shift","dbKey","finally","removeAttribute","imageDiv","preloader","btnBack","helpList","QRCodeStyling","prevToken","ignoreErrors","iterate","isLoop","loginToken","except_ids","dc_id","setBaseDcId","token","authorization","setUser","user","encoded","url","getComputedStyle","documentElement","surfaceColor","getPropertyValue","trim","textColor","primaryColor","logoUrl","fetch","reader","FileReader","onload","result","readAsDataURL","qrCode","data","image","dotsOptions","color","cornersSquareOptions","imageOptions","imageSize","backgroundOptions","qrOptions","errorCorrectionLevel","lastChild","_drawingPromise","race","_canvas","_image","children","Array","from","timestamp","Date","now","diff","expires","serverTimeOffset","warn","handled","func","codeInput","authCode","headerElement","sentTypeElement","CODELENGTH","codeInputField","submitCode","cleanup","monkey","params","phone_code_hash","phone_code","isMobile","load","_authCode","evt","createEvent","initEvent","dispatchEvent","getElementsByClassName","args","sentCode","replaceContent","elem","node","firstChild","replaceWith","textContent","init","findUpAttribute","entities","originalEvent","clipboardData","getData","usePlainText","html","curChild","nextSibling","nodeType","nodeValue","richValue","getRichValue","entities2","parseEntities","mergeEntities","wrapDraftText","execCommand","InputState","required","validate","maxLength","showLengthOn","placeholder","canBeEdited","processInput","labelText","firstElementChild","String","observer","MutationObserver","isInputEmpty","inputFake","onFakeInput","observe","characterData","childList","subtree","animate","className","border","labelEl","showingLength","wasError","contains","inputLength","isError","range","createRange","selectNodeContents","sel","getSelection","removeAllRanges","addRange","selectElementContents","labelOptions","setHeight","scrollHeight","newHeight","currentHeight","transitionDuration","log","fireFakeInput","originalValue","isValid","isChanged","silent","setDraftValue","Error","Valid","setState","ScrollableBase","logPrefix","onScrollMeasure","lastScrollPosition","lastScrollDirection","isHeavyAnimationInProgress","needCheckAfterAnimation","onScroll","cancelAnimationFrame","onScrolledTop","onScrolledBottom","splitUp","onAdditionalScroll","scrollPosition","scrollProperty","checkForTriggers","removeHeavyAnimationListener","passive","Scrollable","onScrollOffset","withPaddingContainer","loadedAll","top","bottom","maxScrollTop","clientHeight","scrollTop","setListeners","elements","padding","prepend","offsetHeight","getDistanceToEnd","y","ScrollableX","splitCount","scrollHorizontally","deltaX","scrollWidth","clientWidth","scrollLeft","deltaY","CheckboxField","restriction","toggleDisability","stateKey","stateValue","stateValues","setByKey","textArgs","box","checkSvg","createElementNS","setAttributeNS","use","bg","withHover","event","Event","bubbles","cancelable","disable","SetTransition","forwards","duration","onTransitionEnd","useRafs","raf","animationsEnabled","afterTimeout","field","withEntities","lines","line","combineSameEntities","sortEntities","findUpTag","tag","closest","attribute","markdownTags","bold","entityName","underline","italic","monospace","strikethrough","link","mentionName","spoiler","BLOCK_TAG_NAMES","getRichElementValue","selNode","selOffset","offset","substr","parentNode","getAttribute","href","user_id","follow","toUserId","isSelected","isBlock","has","tagName","splice","HTMLImageElement","alt","isTableCell","wasEntitiesLength","i","wasLength","hasAttribute","serverTimeManager","to","addTaskListener","task","payload","bytesToHex","toString","bytesFromHex","hexString","len","ceil","start","parseInt","charAt","bytesToBase64","mod3","nLen","nUint24","nIdx","fromCharCode","uint6ToBase64","nUint6","bytesCmp","bytes1","bytes2","bufferConcats","reduce","acc","v","byteLength","tmp","ArrayBuffer","placeCaretAtEnd","ignoreTouchCheck","activeElement","collapse","body","createTextRange","textRange","moveToElementText","prefixes","maxPrefixLength","setPrefix","prefix","formatPhoneNumber","originalStr","prefixCountry","patterns","searchForPattern","pattern","mostMatchedPatternMatches","mostMatchedPattern","_pattern","patternMatches","k","symbol","idx"],"mappings":"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","file":"12.64eef3b6d04c82fd3015.chunk.js","sourcesContent":["/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport { cancelEvent } from \"../helpers/dom/cancelEvent\";\nimport { attachClickEvent } from \"../helpers/dom/clickEvent\";\nimport loadFonts from \"../helpers/dom/loadFonts\";\nimport { Config, LangPackDifference, LangPackString } from \"../layer\";\nimport I18n, { LangPackKey } from \"../lib/langPack\";\nimport apiManager from \"../lib/mtproto/mtprotoworker\";\nimport rootScope from \"../lib/rootScope\";\nimport Button from \"./button\";\nimport { putPreloader } from \"./misc\";\n\nlet set = false;\n\nfunction getLang(): Promise<[Config.config, LangPackString[], LangPackDifference.langPackDifference]> {\n  if(cachedPromise) return cachedPromise;\n  return cachedPromise = apiManager.getConfig().then(config => {\n    if(config.suggested_lang_code !== I18n.lastRequestedLangCode) {\n      //I18n.loadLangPack(config.suggested_lang_code);\n\n      return Promise.all([\n        config,\n        I18n.getStrings(config.suggested_lang_code, ['Login.ContinueOnLanguage']),\n        I18n.getCacheLangPack()\n      ]);\n    } else {\n      return [] as any;\n    }\n  });\n}\n\nlet cachedPromise: ReturnType<typeof getLang>;\n\nexport default function getLanguageChangeButton(appendTo: HTMLElement) {\n  if(set) return;\n  getLang().then(([config, strings]) => {\n    if(!config) {\n      return;\n    }\n\n    const backup: LangPackString[] = [];\n    strings.forEach(string => {\n      const backupString = I18n.strings.get(string.key as LangPackKey);\n      if(!backupString) {\n        return;\n      }\n      \n      backup.push(backupString);\n      I18n.strings.set(string.key as LangPackKey, string);\n    });\n\n    const btnChangeLanguage = Button('btn-primary btn-secondary btn-primary-transparent primary', {text: 'Login.ContinueOnLanguage'});\n    btnChangeLanguage.lastElementChild.classList.remove('i18n'); // prevent changing language\n    loadFonts().then(() => {\n      window.requestAnimationFrame(() => {\n        appendTo.append(btnChangeLanguage);\n      });\n    });\n\n    rootScope.addEventListener('language_change', () => {\n      btnChangeLanguage.remove();\n    }, {once: true});\n\n    backup.forEach(string => {\n      I18n.strings.set(string.key as LangPackKey, string);\n    });\n    \n    attachClickEvent(btnChangeLanguage, (e) => {\n      cancelEvent(e);\n\n      set = true;\n\n      btnChangeLanguage.disabled = true;\n      putPreloader(btnChangeLanguage);\n\n      I18n.getLangPack(config.suggested_lang_code);\n    });\n  });\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport readBlobAsArrayBuffer from \"./readBlobAsArrayBuffer\";\n\nexport default function readBlobAsUint8Array(blob: Blob) {\n  return readBlobAsArrayBuffer(blob).then(buffer => new Uint8Array(buffer));\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport readBlobAs from \"./readBlobAs\";\n\nexport default function readBlobAsArrayBuffer(blob: Blob) {\n  return readBlobAs(blob, 'readAsArrayBuffer');\n}\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n * \r\n * Originally from:\r\n * https://github.com/zhukov/webogram\r\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\r\n * https://github.com/zhukov/webogram/blob/master/LICENSE\r\n */\r\n\r\nimport blobConstruct from \"../helpers/blob/blobConstruct\";\r\nimport readBlobAsUint8Array from \"../helpers/blob/readBlobAsUint8Array\";\r\n\r\nexport class FileManager {\r\n  private blobSupported = true;\r\n  \r\n  constructor() {\r\n    try {\r\n      blobConstruct([], '');\r\n    } catch(e) {\r\n      this.blobSupported = false;\r\n    }\r\n  }\r\n  \r\n  public isAvailable() {\r\n    return this.blobSupported;\r\n  }\r\n  \r\n  public write(fileWriter: ReturnType<FileManager['getFakeFileWriter']>, bytes: Uint8Array | Blob | string): Promise<void> {\r\n    if(bytes instanceof Blob) { // is file bytes\r\n      return readBlobAsUint8Array(bytes).then(arr => {\r\n        return fileWriter.write(arr);\r\n      });\r\n    } else {\r\n      return fileWriter.write(bytes);\r\n    }\r\n  }\r\n\r\n  public getFakeFileWriter(mimeType: string, saveFileCallback?: (blob: Blob) => Promise<Blob>) {\r\n    const blobParts: Array<Uint8Array | string> = [];\r\n    const fakeFileWriter = {\r\n      write: async(part: Uint8Array | string) => {\r\n        if(!this.blobSupported) {\r\n          throw false;\r\n        }\r\n        \r\n        blobParts.push(part);\r\n      },\r\n      truncate: () => {\r\n        blobParts.length = 0;\r\n      },\r\n      finalize: (saveToStorage = true) => {\r\n        const blob = blobConstruct(blobParts, mimeType);\r\n\r\n        if(saveToStorage && saveFileCallback) {\r\n          saveFileCallback(blob);\r\n        }\r\n        \r\n        return blob;\r\n      }\r\n    };\r\n    \r\n    return fakeFileWriter;\r\n  }\r\n}\r\n\r\nexport default new FileManager();\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport Modes from '../config/modes';\r\nimport blobConstruct from '../helpers/blob/blobConstruct';\r\nimport FileManager from './fileManager';\r\n//import { MOUNT_CLASS_TO } from './mtproto/mtproto_config';\r\n//import { logger } from './polyfill';\r\n\r\nexport type CacheStorageDbName = 'cachedFiles' | 'cachedStreamChunks' | 'cachedAssets';\r\n\r\nexport default class CacheStorageController {\r\n  private static STORAGES: CacheStorageController[] = [];\r\n  private openDbPromise: Promise<Cache>;\r\n\r\n  private useStorage = true;\r\n\r\n  //private log: ReturnType<typeof logger> = logger('CS');\r\n\r\n  constructor(private dbName: CacheStorageDbName) {\r\n    if(Modes.test) {\r\n      this.dbName += '_test';\r\n    }\r\n\r\n    if(CacheStorageController.STORAGES.length) {\r\n      this.useStorage = CacheStorageController.STORAGES[0].useStorage;\r\n    }\r\n    \r\n    this.openDatabase();\r\n    CacheStorageController.STORAGES.push(this);\r\n  }\r\n\r\n  private openDatabase(): Promise<Cache> {\r\n    return this.openDbPromise ?? (this.openDbPromise = caches.open(this.dbName));\r\n  }\r\n\r\n  public delete(entryName: string) {\r\n    return this.timeoutOperation((cache) => cache.delete('/' + entryName));\r\n  }\r\n\r\n  public deleteAll() {\r\n    return caches.delete(this.dbName);\r\n  }\r\n\r\n  public get(entryName: string) {\r\n    return this.timeoutOperation((cache) => cache.match('/' + entryName));\r\n  }\r\n\r\n  public save(entryName: string, response: Response) {\r\n    // return new Promise((resolve) => {}); // DEBUG\r\n    return this.timeoutOperation((cache) => cache.put('/' + entryName, response));\r\n  }\r\n\r\n  public getFile(fileName: string, method: 'blob' | 'json' | 'text' = 'blob'): Promise<any> {\r\n    /* if(method === 'blob') {\r\n      return Promise.reject();\r\n    } */\r\n\r\n    // const str = `get fileName: ${fileName}`;\r\n    // console.time(str);\r\n    return this.get(fileName).then((response) => {\r\n      if(!response) {\r\n        //console.warn('getFile:', response, fileName);\r\n        throw 'NO_ENTRY_FOUND';\r\n      }\r\n\r\n      const promise = response[method]();\r\n      // promise.then(() => {\r\n      //   console.timeEnd(str);\r\n      // });\r\n      return promise;\r\n    });\r\n  }\r\n\r\n  public saveFile(fileName: string, blob: Blob | Uint8Array) {\r\n    //return Promise.resolve(blobConstruct([blob]));\r\n    if(!(blob instanceof Blob)) {\r\n      blob = blobConstruct(blob) as Blob;\r\n    }\r\n\r\n    const response = new Response(blob, {\r\n      headers: {\r\n        'Content-Length': '' + blob.size\r\n      }\r\n    });\r\n    \r\n    return this.save(fileName, response).then(() => blob as Blob);\r\n  }\r\n\r\n  public timeoutOperation<T>(callback: (cache: Cache) => Promise<T>) {\r\n    if(!this.useStorage) {\r\n      return Promise.reject('STORAGE_OFFLINE');\r\n    }\r\n\r\n    return new Promise<T>(async(resolve, reject) => {\r\n      let rejected = false;\r\n      const timeout = setTimeout(() => {\r\n        reject();\r\n        //console.warn('CACHESTORAGE TIMEOUT');\r\n        rejected = true;\r\n      }, 15e3);\r\n\r\n      try {\r\n        const cache = await this.openDatabase();\r\n        if(!cache) {\r\n          this.useStorage = false;\r\n          this.openDbPromise = undefined;\r\n          throw 'no cache?';\r\n        }\r\n\r\n        const res = await callback(cache);\r\n\r\n        if(rejected) return;\r\n        resolve(res);\r\n      } catch(err) {\r\n        reject(err);\r\n      }\r\n\r\n      clearTimeout(timeout);\r\n    });\r\n  }\r\n\r\n  public getFileWriter(fileName: string, mimeType: string) {\r\n    const fakeWriter = FileManager.getFakeFileWriter(mimeType, (blob) => {\r\n      return this.saveFile(fileName, blob).catch(() => blob);\r\n    });\r\n\r\n    return Promise.resolve(fakeWriter);\r\n  }\r\n\r\n  public static toggleStorage(enabled: boolean) {\r\n    return Promise.all(this.STORAGES.map(storage => {\r\n      storage.useStorage = enabled;\r\n      \r\n      if(!enabled) {\r\n        return storage.deleteAll();\r\n      }\r\n    }));\r\n  }\r\n}\r\n\r\n//const cacheStorage = new CacheStorageController(); \r\n//MOUNT_CLASS_TO.cacheStorage = cacheStorage;\r\n//export default cacheStorage;\r\n","export default function fixBase64String(str: string, toUrl: boolean) {\n  if(toUrl) {\n    return str.replace(/\\+/g, '-').replace(/\\//g, '_').replace(/\\=+$/, '');\n  } else {\n    return str.replace(/-/g, '+').replace(/_/g, '/');\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport placeCaretAtEnd from \"../helpers/dom/placeCaretAtEnd\";\nimport { formatPhoneNumber } from \"../helpers/formatPhoneNumber\";\nimport { IS_APPLE, IS_ANDROID, IS_APPLE_MOBILE } from \"../environment/userAgent\";\nimport { HelpCountry, HelpCountryCode } from \"../layer\";\nimport InputField, { InputFieldOptions } from \"./inputField\";\n\nexport default class TelInputField extends InputField {\n  private pasted = false;\n  public lastValue = '';\n  \n  constructor(options: InputFieldOptions & {\n    onInput?: (formatted: ReturnType<typeof formatPhoneNumber>) => void\n  } = {}) {\n    super({\n      label: 'Contacts.PhoneNumber.Placeholder',\n      //plainText: true,\n      name: 'phone',\n      ...options\n    });\n\n    this.container.classList.add('input-field-phone');\n\n    let telEl = this.input;\n    if(telEl instanceof HTMLInputElement) {\n      telEl.type = 'tel';\n      telEl.autocomplete = 'rr55RandomRR55';\n    } else {\n      telEl.inputMode = 'decimal';\n\n      const pixelRatio = window.devicePixelRatio;\n      if(pixelRatio > 1) {\n        let letterSpacing: number;\n        if(IS_APPLE) {\n          letterSpacing = pixelRatio * -.16;\n        } else if(IS_ANDROID) {\n          letterSpacing = 0;\n        }\n\n        telEl.style.setProperty('--letter-spacing', letterSpacing + 'px');\n      }\n\n      const originalFunc = this.setValueSilently.bind(this);\n      this.setValueSilently = (value) => {\n        originalFunc(value);\n        placeCaretAtEnd(this.input, true);\n      };\n    }\n\n    telEl.addEventListener('input', () => {\n      //console.log('input', this.value);\n      telEl.classList.remove('error');\n  \n      const value = this.value;\n      const diff = Math.abs(value.length - this.lastValue.length);\n      if(diff > 1 && !this.pasted && IS_APPLE_MOBILE) {\n        this.setValueSilently(this.lastValue + value);\n      }\n  \n      this.pasted = false;\n  \n      this.setLabel();\n  \n      let formattedPhoneNumber: ReturnType<typeof formatPhoneNumber>;\n      let formatted: string, country: HelpCountry, countryCode: HelpCountryCode, leftPattern = '';\n      if(this.value.replace(/\\++/, '+') === '+') {\n        this.setValueSilently('+');\n      } else {\n        formattedPhoneNumber = formatPhoneNumber(this.value);\n        formatted = formattedPhoneNumber.formatted;\n        country = formattedPhoneNumber.country;\n        leftPattern = formattedPhoneNumber.leftPattern;\n        countryCode = formattedPhoneNumber.code;\n        this.setValueSilently(this.lastValue = formatted ? '+' + formatted : '');\n      }\n  \n      telEl.dataset.leftPattern = leftPattern/* .replace(/X/g, '0') */;\n  \n      //console.log(formatted, country);\n\n      options.onInput && options.onInput(formattedPhoneNumber);\n    });\n  \n    telEl.addEventListener('paste', () => {\n      this.pasted = true;\n      //console.log('paste', telEl.value);\n    });\n  \n    /* telEl.addEventListener('change', (e) => {\n      console.log('change', telEl.value);\n    }); */\n  \n    telEl.addEventListener('keypress', (e) => {\n      //console.log('keypress', this.value);\n      const key = e.key;\n      if(/\\D/.test(key) && !(e.metaKey || e.ctrlKey) && key !== 'Backspace' && !(key === '+' && e.shiftKey/*  && !this.value */)) {\n        e.preventDefault();\n        return false;\n      }\n    });\n  \n    /* telEl.addEventListener('focus', function(this: typeof telEl, e) {\n      this.removeAttribute('readonly'); // fix autocomplete\n    });*/\n  }\n}\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport InputField from \"../inputField\";\r\nimport lottieLoader from \"../../lib/rlottie/lottieLoader\";\r\nimport RLottiePlayer from \"../../lib/rlottie/rlottiePlayer\";\r\n\r\nexport default class TrackingMonkey {\r\n  public container: HTMLElement;\r\n\r\n  protected max = 45;\r\n  protected needFrame = 0;\r\n\r\n  protected animation: RLottiePlayer;\r\n  protected idleAnimation: RLottiePlayer;\r\n\r\n  protected loadPromise: Promise<any>;\r\n\r\n  constructor(protected inputField: InputField, protected size: number) {\r\n    this.container = document.createElement('div');\r\n    this.container.classList.add('media-sticker-wrapper');\r\n\r\n    const input = inputField.input;\r\n\r\n    input.addEventListener('blur', () => {\r\n      this.playAnimation(0);\r\n    });\r\n\r\n    input.addEventListener('input', (e) => {\r\n      this.playAnimation(inputField.value.length);\r\n    });\r\n\r\n    /* codeInput.addEventListener('focus', () => {\r\n      playAnimation(Math.max(codeInput.value.length, 1));\r\n    }); */\r\n  }\r\n\r\n  // 1st symbol = frame 15\r\n  // end symbol = frame 165\r\n  public playAnimation(length: number) {\r\n    if(!this.animation) return;\r\n\r\n    length = Math.min(length, 30);\r\n    let frame: number;\r\n    if(length) {\r\n      frame = Math.round(Math.min(this.max, length) * (165 / this.max) + 11.33);\r\n\r\n      if(this.idleAnimation) {\r\n        this.idleAnimation.stop(true);\r\n        this.idleAnimation.canvas.style.display = 'none';\r\n      }\r\n      \r\n      this.animation.canvas.style.display = '';\r\n    } else {\r\n      /* const cb = (frameNo: number) => {\r\n        if(frameNo <= 1) { */\r\n          /* idleAnimation.play();\r\n          idleAnimation.canvas.style.display = '';\r\n          animation.canvas.style.display = 'none'; */\r\n      /*     animation.removeListener('enterFrame', cb);\r\n        }\r\n      };\r\n      animation.addListener('enterFrame', cb); */\r\n      \r\n      frame = 0;\r\n    }\r\n    //animation.playSegments([1, 2]);\r\n\r\n    const direction = this.needFrame > frame ? -1 : 1;\r\n    //console.log('keydown', length, frame, direction);\r\n\r\n    this.animation.setDirection(direction);\r\n    if(this.needFrame !== 0 && frame === 0) {\r\n      this.animation.setSpeed(7);\r\n    }\r\n    /* let diff = Math.abs(needFrame - frame * direction);\r\n    if((diff / 20) > 1) animation.setSpeed(diff / 20 | 0); */\r\n    this.needFrame = frame;\r\n    \r\n    this.animation.play();\r\n\r\n    /* animation.goToAndStop(15, true); */\r\n    //animation.goToAndStop(length / max * );\r\n  }\r\n\r\n  public load() {\r\n    if(this.loadPromise) return this.loadPromise;\r\n    return this.loadPromise = Promise.all([\r\n      lottieLoader.loadAnimationAsAsset({\r\n        container: this.container,\r\n        loop: true,\r\n        autoplay: true,\r\n        width: this.size,\r\n        height: this.size\r\n      }, 'TwoFactorSetupMonkeyIdle').then(animation => {\r\n        this.idleAnimation = animation;\r\n\r\n        // ! animationIntersector will stop animation instantly\r\n        if(!this.inputField.value.length) {\r\n          animation.play();\r\n        }\r\n\r\n        return lottieLoader.waitForFirstFrame(animation);\r\n      }),\r\n\r\n      lottieLoader.loadAnimationAsAsset({\r\n        container: this.container,\r\n        loop: false,\r\n        autoplay: false,\r\n        width: this.size,\r\n        height: this.size\r\n      }, 'TwoFactorSetupMonkeyTracking').then(_animation => {\r\n        this.animation = _animation;\r\n\r\n        if(!this.inputField.value.length) {\r\n          this.animation.canvas.style.display = 'none';\r\n        }\r\n\r\n        this.animation.addEventListener('enterFrame', currentFrame => {\r\n          //console.log('enterFrame', currentFrame, needFrame);\r\n          //let currentFrame = Math.round(e.currentTime);\r\n          \r\n          if((this.animation.direction === 1 && currentFrame >= this.needFrame) ||\r\n            (this.animation.direction === -1 && currentFrame <= this.needFrame)) {\r\n            this.animation.setSpeed(1);\r\n            this.animation.pause();\r\n          }\r\n\r\n          if(currentFrame === 0 && this.needFrame === 0) {\r\n            //animation.curFrame = 0;\r\n            \r\n            if(this.idleAnimation) {\r\n              this.idleAnimation.canvas.style.display = '';\r\n              this.idleAnimation.play();\r\n              this.animation.canvas.style.display = 'none';\r\n            }\r\n          }\r\n        });\r\n        //console.log(animation.getDuration(), animation.getDuration(true));\r\n\r\n        return lottieLoader.waitForFirstFrame(_animation);\r\n      })\r\n    ]);\r\n  }\r\n\r\n  public remove() {\r\n    if(this.animation) this.animation.remove();\r\n    if(this.idleAnimation) this.idleAnimation.remove();\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport InputField, { InputFieldOptions } from \"./inputField\";\r\n\r\nexport default class CodeInputField extends InputField {\r\n  constructor(options: InputFieldOptions & {\r\n    length: number,\r\n    onFill: (code: string) => void\r\n  }) {\r\n    super({\r\n      plainText: true,\r\n      ...options\r\n    });\r\n\r\n    const input = this.input as HTMLInputElement;\r\n    input.type = 'tel';\r\n    input.setAttribute('required', '');\r\n    input.autocomplete = 'off';\r\n\r\n    let lastLength = 0;\r\n    this.input.addEventListener('input', (e) => {\r\n      this.input.classList.remove('error');\r\n      this.setLabel();\r\n  \r\n      const value = this.value.replace(/\\D/g, '').slice(0, options.length);\r\n      this.setValueSilently(value);\r\n  \r\n      const length = this.value.length;\r\n      if(length === options.length) { // submit code\r\n        options.onFill(this.value);\r\n      } else if(length === lastLength) {\r\n        return;\r\n      }\r\n  \r\n      lastLength = length;\r\n    });\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport { putPreloader } from \"../components/misc\";\r\nimport Scrollable from '../components/scrollable';\r\nimport appStateManager from \"../lib/appManagers/appStateManager\";\r\nimport apiManager from \"../lib/mtproto/mtprotoworker\";\r\nimport { RichTextProcessor } from '../lib/richtextprocessor';\r\nimport Page from \"./page\";\r\nimport InputField from \"../components/inputField\";\r\nimport CheckboxField from \"../components/checkboxField\";\r\nimport Button from \"../components/button\";\r\nimport fastSmoothScroll from \"../helpers/fastSmoothScroll\";\r\nimport { IS_TOUCH_SUPPORTED } from \"../environment/touchSupport\";\r\nimport App from \"../config/app\";\r\nimport I18n, { _i18n, i18n } from \"../lib/langPack\";\r\nimport lottieLoader from \"../lib/rlottie/lottieLoader\";\r\nimport { ripple } from \"../components/ripple\";\r\nimport findUpTag from \"../helpers/dom/findUpTag\";\r\nimport findUpClassName from \"../helpers/dom/findUpClassName\";\r\nimport { randomLong } from \"../helpers/random\";\r\nimport AppStorage from \"../lib/storage\";\r\nimport CacheStorageController from \"../lib/cacheStorage\";\r\nimport pageSignQR from \"./pageSignQR\";\r\nimport getLanguageChangeButton from \"../components/languageChangeButton\";\r\nimport { cancelEvent } from \"../helpers/dom/cancelEvent\";\r\nimport { attachClickEvent } from \"../helpers/dom/clickEvent\";\r\nimport replaceContent from \"../helpers/dom/replaceContent\";\r\nimport toggleDisability from \"../helpers/dom/toggleDisability\";\r\nimport sessionStorage from \"../lib/sessionStorage\";\r\nimport { DcAuthKey } from \"../types\";\r\nimport placeCaretAtEnd from \"../helpers/dom/placeCaretAtEnd\";\r\nimport { HelpCountry, HelpCountryCode } from \"../layer\";\r\nimport { getCountryEmoji } from \"../vendor/emoji\";\r\nimport simulateEvent from \"../helpers/dom/dispatchEvent\";\r\nimport stateStorage from \"../lib/stateStorage\";\r\nimport rootScope from \"../lib/rootScope\";\r\nimport TelInputField from \"../components/telInputField\";\r\nimport IS_EMOJI_SUPPORTED from \"../environment/emojiSupport\";\r\n\r\n//import _countries from '../countries_pretty.json';\r\nlet btnNext: HTMLButtonElement = null, btnQr: HTMLButtonElement;\r\n\r\nlet onFirstMount = () => {\r\n  /* if(Modes.test) {\r\n    Countries.push({\r\n      _: 'help.country',\r\n      default_name: 'Test Country',\r\n      country_codes: [{\r\n        _: 'help.countryCode',\r\n        country_code: '999 66',\r\n        patterns: ['999 66 XXX XX']\r\n      }],\r\n      iso2: 'KK'\r\n    });\r\n  \r\n    console.log('Added test country to list!');\r\n  } */\r\n\r\n  //const countries: Country[] = _countries.default.filter(c => c.emoji);\r\n  // const countries: Country[] = Countries.filter(c => c.emoji).sort((a, b) => a.name.localeCompare(b.name));\r\n  // const countries = I18n.countriesList.filter(country => !country.pFlags?.hidden);\r\n  const setCountries = () => {\r\n    countries = I18n.countriesList\r\n    .filter(country => !country.pFlags?.hidden)\r\n    .sort((a, b) => (a.name || a.default_name).localeCompare(b.name || b.default_name));\r\n  };\r\n  let countries: HelpCountry.helpCountry[]; \r\n\r\n  setCountries();\r\n\r\n  rootScope.addEventListener('language_change', () => {\r\n    setCountries();\r\n  });\r\n\r\n  const liMap: Map<string, HTMLLIElement[]> = new Map();\r\n\r\n  let lastCountrySelected: HelpCountry, lastCountryCodeSelected: HelpCountryCode;\r\n\r\n  const inputWrapper = document.createElement('div');\r\n  inputWrapper.classList.add('input-wrapper');\r\n\r\n  const countryInputField = new InputField({\r\n    label: 'Login.CountrySelectorLabel',\r\n    name: randomLong()\r\n  });\r\n\r\n  countryInputField.container.classList.add('input-select');\r\n\r\n  const countryInput = countryInputField.input;\r\n  // countryInput.autocomplete = randomLong();\r\n\r\n  const selectWrapper = document.createElement('div');\r\n  selectWrapper.classList.add('select-wrapper', 'z-depth-3', 'hide');\r\n\r\n  const arrowDown = document.createElement('span');\r\n  arrowDown.classList.add('arrow', 'arrow-down');\r\n  countryInputField.container.append(arrowDown);\r\n\r\n  const selectList = document.createElement('ul');\r\n  selectWrapper.appendChild(selectList);\r\n\r\n  const scroll = new Scrollable(selectWrapper);\r\n\r\n  let initSelect = () => {\r\n    initSelect = null;\r\n\r\n    countries.forEach((c) => {\r\n      const emoji = getCountryEmoji(c.iso2);\r\n\r\n      const liArr: Array<HTMLLIElement> = [];\r\n      c.country_codes.forEach((countryCode) => {\r\n        const li = document.createElement('li');\r\n\r\n        let wrapped = RichTextProcessor.wrapEmojiText(emoji);\r\n        if(IS_EMOJI_SUPPORTED) {\r\n          const spanEmoji = document.createElement('span');\r\n          spanEmoji.innerHTML = wrapped;\r\n          li.append(spanEmoji);\r\n        } else {\r\n          li.innerHTML = wrapped;\r\n        }\r\n        \r\n        const el = i18n(c.default_name as any);\r\n        el.dataset.defaultName = c.default_name;\r\n        li.append(el);\r\n\r\n        const span = document.createElement('span');\r\n        span.classList.add('phone-code');\r\n        span.innerText = '+' + countryCode.country_code;\r\n        li.appendChild(span);\r\n\r\n        liArr.push(li);\r\n        selectList.append(li);\r\n      });\r\n\r\n      liMap.set(c.iso2, liArr);\r\n    });\r\n    \r\n    selectList.addEventListener('mousedown', (e) => {\r\n      if(e.button !== 0) { // other buttons but left shall not pass\r\n        return;\r\n      }\r\n      \r\n      const target = findUpTag(e.target, 'LI')\r\n      selectCountryByTarget(target);\r\n      //console.log('clicked', e, countryName, phoneCode);\r\n    });\r\n\r\n    countryInputField.container.appendChild(selectWrapper);\r\n  };\r\n\r\n  const selectCountryByTarget = (target: HTMLElement) => {\r\n    const defaultName = (target.childNodes[1] as HTMLElement).dataset.defaultName;\r\n    const phoneCode = target.querySelector<HTMLElement>('.phone-code').innerText;\r\n    const countryCode = phoneCode.replace(/\\D/g, '');\r\n\r\n    replaceContent(countryInput, i18n(defaultName as any));\r\n    simulateEvent(countryInput, 'input');\r\n    lastCountrySelected = countries.find(c => c.default_name === defaultName);\r\n    lastCountryCodeSelected = lastCountrySelected.country_codes.find(_countryCode => _countryCode.country_code === countryCode);\r\n    \r\n    telInputField.value = telInputField.lastValue = phoneCode;\r\n    hidePicker();\r\n    setTimeout(() => {\r\n      telEl.focus();\r\n      placeCaretAtEnd(telEl, true);\r\n    }, 0);\r\n  };\r\n  \r\n  initSelect();\r\n\r\n  let hideTimeout: number;\r\n\r\n  countryInput.addEventListener('focus', function(this: typeof countryInput, e) {\r\n    if(initSelect) {\r\n      initSelect();\r\n    } else {\r\n      countries.forEach((c) => {\r\n        liMap.get(c.iso2).forEach(li => li.style.display = '');\r\n      });\r\n    }\r\n\r\n    clearTimeout(hideTimeout);\r\n    hideTimeout = undefined;\r\n\r\n    selectWrapper.classList.remove('hide');\r\n    void selectWrapper.offsetWidth; // reflow\r\n    selectWrapper.classList.add('active');\r\n\r\n    countryInputField.select();\r\n\r\n    fastSmoothScroll({\r\n      container: page.pageEl.parentElement.parentElement, \r\n      element: countryInput, \r\n      position: 'start', \r\n      margin: 4\r\n    });\r\n\r\n    setTimeout(() => {\r\n      if(!mouseDownHandlerAttached) {\r\n        document.addEventListener('mousedown', onMouseDown, {capture: true});\r\n        mouseDownHandlerAttached = true;\r\n      }\r\n    }, 0);\r\n  });\r\n\r\n  let mouseDownHandlerAttached = false;\r\n  const onMouseDown = (e: MouseEvent) => {\r\n    if(findUpClassName(e.target, 'input-select')) {\r\n      return;\r\n    }\r\n    if(e.target === countryInput) {\r\n      return;\r\n    }\r\n\r\n    hidePicker();\r\n    document.removeEventListener('mousedown', onMouseDown, {capture: true});\r\n    mouseDownHandlerAttached = false;\r\n  };\r\n\r\n  const hidePicker = () => {\r\n    if(hideTimeout !== undefined) return;\r\n    selectWrapper.classList.remove('active');\r\n    hideTimeout = window.setTimeout(() => {\r\n      selectWrapper.classList.add('hide');\r\n      hideTimeout = undefined;\r\n    }, 200);\r\n  };\r\n  /* false && countryInput.addEventListener('blur', function(this: typeof countryInput, e) {\r\n    hidePicker();\r\n    \r\n    e.cancelBubble = true;\r\n  }, {capture: true}); */\r\n\r\n  countryInput.addEventListener('keyup', (e) => {\r\n    const key = e.key;\r\n    if(e.ctrlKey || key === 'Control') return false;\r\n\r\n    //let i = new RegExp('^' + this.value, 'i');\r\n    let _value = countryInputField.value.toLowerCase();\r\n    let matches: HelpCountry[] = [];\r\n    countries.forEach((c) => {\r\n      const names = [\r\n        c.name, \r\n        c.default_name,\r\n        c.iso2\r\n      ];\r\n\r\n      names.filter(Boolean).forEach(name => {\r\n        const abbr = name.split(' ').filter(word => /\\w/.test(word)).map(word => word[0]).join('');\r\n        if(abbr.length > 1) {\r\n          names.push(abbr);\r\n        }\r\n      });\r\n\r\n      let good = !!names.filter(Boolean).find(str => str.toLowerCase().indexOf(_value) !== -1)/*  === 0 */;//i.test(c.name);\r\n\r\n      liMap.get(c.iso2).forEach(li => li.style.display = good ? '' : 'none');\r\n      if(good) matches.push(c);\r\n    });\r\n\r\n    // Код ниже автоматически выберет страну если она осталась одна при поиске\r\n    /* if(matches.length === 1 && matches[0].li.length === 1) {\r\n      if(matches[0].name === lastCountrySelected) return false;\r\n      //console.log('clicking', matches[0]);\r\n\r\n      var clickEvent = document.createEvent('MouseEvents');\r\n      clickEvent.initEvent('mousedown', true, true);\r\n      matches[0].li[0].dispatchEvent(clickEvent);\r\n      return false;\r\n    } else  */if(matches.length === 0) {\r\n      countries.forEach((c) => {\r\n        liMap.get(c.iso2).forEach(li => li.style.display = '');\r\n      });\r\n    } else if(matches.length === 1 && key === 'Enter') {\r\n      selectCountryByTarget(liMap.get(matches[0].iso2)[0]);\r\n    }\r\n  });\r\n\r\n  arrowDown.addEventListener('mousedown', function(this: typeof arrowDown, e) {\r\n    e.cancelBubble = true;\r\n    e.preventDefault();\r\n    if(countryInput.matches(':focus')) countryInput.blur();\r\n    else countryInput.focus();\r\n  });\r\n\r\n  const telInputField = new TelInputField({\r\n    onInput: (formatted) => {\r\n      lottieLoader.loadLottieWorkers();\r\n\r\n      const {country, code} = formatted || {};\r\n      let countryName = country ? country.name || country.default_name : ''/* 'Unknown' */;\r\n      if(countryName !== countryInputField.value && (\r\n          !lastCountrySelected || \r\n          !country ||\r\n          !code || (\r\n            lastCountrySelected !== country && \r\n            lastCountryCodeSelected.country_code !== code.country_code\r\n          )\r\n        )\r\n      ) {\r\n        replaceContent(countryInput, country ? i18n(country.default_name as any) : countryName);\r\n        lastCountrySelected = country;\r\n        lastCountryCodeSelected = code;\r\n      }\r\n  \r\n      //if(country && (telInputField.value.length - 1) >= (country.pattern ? country.pattern.length : 9)) {\r\n      if(country || (telInputField.value.length - 1) > 1) {\r\n        btnNext.style.visibility = '';\r\n      } else {\r\n        btnNext.style.visibility = 'hidden';\r\n      }\r\n    }\r\n  });\r\n\r\n  const telEl = telInputField.input;\r\n\r\n  telEl.addEventListener('keypress', (e) => {\r\n    //console.log('keypress', this.value);\r\n    if(!btnNext.style.visibility &&/* this.value.length >= 9 && */ e.key === 'Enter') {\r\n      return onSubmit();\r\n    }\r\n  });\r\n\r\n  /* telEl.addEventListener('focus', function(this: typeof telEl, e) {\r\n    this.removeAttribute('readonly'); // fix autocomplete\r\n  });*/\r\n\r\n  const signedCheckboxField = new CheckboxField({\r\n    text: 'Login.KeepSigned', \r\n    name: 'keepSession',\r\n    withRipple: true,\r\n    checked: true\r\n  });\r\n\r\n  signedCheckboxField.input.addEventListener('change', () => {\r\n    const keepSigned = signedCheckboxField.checked;\r\n    appStateManager.pushToState('keepSigned', keepSigned);\r\n    \r\n    AppStorage.toggleStorage(keepSigned);\r\n    CacheStorageController.toggleStorage(keepSigned);\r\n    apiManager.toggleStorage(keepSigned);\r\n    sessionStorage.toggleStorage(keepSigned);\r\n  });\r\n\r\n  appStateManager.getState().then(state => {\r\n    if(!appStateManager.storage.isAvailable()) {\r\n      signedCheckboxField.checked = false;\r\n      signedCheckboxField.label.classList.add('checkbox-disabled');\r\n    } else {\r\n      signedCheckboxField.checked = state.keepSigned;\r\n    }\r\n  });\r\n\r\n  btnNext = Button('btn-primary btn-color-primary', {text: 'Login.Next'});\r\n  btnNext.style.visibility = 'hidden';\r\n\r\n  const onSubmit = (e?: Event) => {\r\n    if(e) {\r\n      cancelEvent(e);\r\n    }\r\n\r\n    const toggle = toggleDisability([/* telEl, countryInput,  */btnNext, btnQr], true);\r\n\r\n    replaceContent(btnNext, i18n('PleaseWait'));\r\n    putPreloader(btnNext);\r\n\r\n    //return;\r\n\r\n    let phone_number = telInputField.value;\r\n    apiManager.invokeApi('auth.sendCode', {\r\n      phone_number: phone_number,\r\n      api_id: App.id,\r\n      api_hash: App.hash,\r\n      settings: {\r\n        _: 'codeSettings' // that's how we sending Type\r\n      }\r\n      //lang_code: navigator.language || 'en'\r\n    }).then((code) => {\r\n      //console.log('got code', code);\r\n\r\n      import('./pageAuthCode').then(m => m.default.mount(Object.assign(code, {phone_number: phone_number})));\r\n    }).catch(err => {\r\n      toggle();\r\n\r\n      switch(err.type) {\r\n        case 'PHONE_NUMBER_INVALID':\r\n          telInputField.setError();\r\n          replaceContent(telInputField.label, i18n('Login.PhoneLabelInvalid'));\r\n          telEl.classList.add('error');\r\n          replaceContent(btnNext, i18n('Login.Next'));\r\n          break;\r\n        default:\r\n          console.error('auth.sendCode error:', err);\r\n          btnNext.innerText = err.type;\r\n          break;\r\n      }\r\n    });\r\n  };\r\n\r\n  attachClickEvent(btnNext, onSubmit);\r\n\r\n  btnQr = Button('btn-primary btn-secondary btn-primary-transparent primary', {text: 'Login.QR.Login'});\r\n\r\n  let qrMounted = false;\r\n  btnQr.addEventListener('click', () => {\r\n    pageSignQR.mount();\r\n    /* const promise = import('./pageSignQR');\r\n    btnQr.disabled = true;\r\n\r\n    let preloaderDiv: HTMLElement;\r\n    if(!qrMounted) {\r\n      preloaderDiv = putPreloader(btnQr);\r\n      qrMounted = true;\r\n    }\r\n\r\n    promise.then(module => {\r\n      module.default.mount();\r\n\r\n      setTimeout(() => {\r\n        btnQr.removeAttribute('disabled');\r\n        if(preloaderDiv) {\r\n          preloaderDiv.remove();\r\n        }\r\n      }, 200);\r\n    }); */\r\n  });\r\n\r\n  inputWrapper.append(countryInputField.container, telInputField.container, signedCheckboxField.label, btnNext, btnQr);\r\n\r\n  const h4 = document.createElement('h4');\r\n  h4.classList.add('text-center');\r\n  _i18n(h4, 'Login.Title');\r\n\r\n  const subtitle = document.createElement('div');\r\n  subtitle.classList.add('subtitle', 'text-center');\r\n  _i18n(subtitle, 'Login.StartText');\r\n\r\n  page.pageEl.querySelector('.container').append(h4, subtitle, inputWrapper);\r\n\r\n  let tryAgain = () => {\r\n    apiManager.invokeApi('help.getNearestDc').then((nearestDcResult) => {\r\n      const langPack = stateStorage.getFromCache('langPack');\r\n      if(langPack && !langPack.countries?.hash) {\r\n        I18n.getLangPack(langPack.lang_code).then(() => {\r\n          simulateEvent(telEl, 'input');\r\n        });\r\n      }\r\n\r\n      const dcs = new Set([1, 2, 3, 4, 5]);\r\n      const done: number[] = [nearestDcResult.this_dc];\r\n\r\n      let promise: Promise<any>;\r\n      if(nearestDcResult.nearest_dc !== nearestDcResult.this_dc) {\r\n        promise = apiManager.getNetworker(nearestDcResult.nearest_dc).then(() => {\r\n          done.push(nearestDcResult.nearest_dc);\r\n        });\r\n      }\r\n\r\n      (promise || Promise.resolve()).then(() => {\r\n        done.forEach(dcId => {\r\n          dcs.delete(dcId);\r\n        });\r\n\r\n        const _dcs = [...dcs];\r\n        const g = async(): Promise<void> => {\r\n          const dcId = _dcs.shift();\r\n          if(!dcId) return;\r\n\r\n          const dbKey: DcAuthKey = `dc${dcId}_auth_key` as any;\r\n          const key = await sessionStorage.get(dbKey);\r\n          if(key) {\r\n            return g();\r\n          }\r\n\r\n          setTimeout(() => { // * если одновременно запросить все нетворкеры, не будет проходить запрос на код\r\n            apiManager.getNetworker(dcId/* , {fileDownload: true} */).finally(g);\r\n          }, /* done.includes(dcId) ? 0 :  */3000);\r\n        };\r\n        \r\n        g();\r\n      });\r\n      \r\n      return nearestDcResult;\r\n    }).then((nearestDcResult) => {\r\n      if(!countryInputField.value.length && !telInputField.value.length) {\r\n        selectCountryByTarget(liMap.get(nearestDcResult.country)[0]);\r\n      }\r\n  \r\n      //console.log('woohoo', nearestDcResult, country);\r\n    })//.catch(tryAgain);\r\n  };\r\n\r\n  if(!IS_TOUCH_SUPPORTED) {\r\n    setTimeout(() => {\r\n      telEl.focus();\r\n    }, 0);\r\n  }\r\n\r\n  getLanguageChangeButton(inputWrapper);\r\n\r\n  tryAgain();\r\n};\r\n\r\nconst page = new Page('page-sign', true, onFirstMount, () => {\r\n  if(btnNext) {\r\n    replaceContent(btnNext, i18n('Login.Next'));\r\n    ripple(btnNext, undefined, undefined, true);\r\n    btnNext.removeAttribute('disabled');\r\n  }\r\n\r\n  if(btnQr) {\r\n    btnQr.removeAttribute('disabled');\r\n  }\r\n\r\n  appStateManager.pushToState('authState', {_: 'authStateSignIn'});\r\n});\r\n\r\nexport default page;\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport type { DcId } from '../types';\r\nimport type { ApiError } from '../lib/mtproto/apiManager';\r\nimport apiManager from '../lib/mtproto/mtprotoworker';\r\nimport Page from './page';\r\nimport serverTimeManager from '../lib/mtproto/serverTimeManager';\r\nimport { AuthAuthorization, AuthLoginToken } from '../layer';\r\nimport { bytesCmp, bytesToBase64 } from '../helpers/bytes';\r\nimport App from '../config/app';\r\nimport Button from '../components/button';\r\nimport { _i18n, i18n, LangPackKey } from '../lib/langPack';\r\nimport appStateManager from '../lib/appManagers/appStateManager';\r\nimport rootScope from '../lib/rootScope';\r\nimport { putPreloader } from '../components/misc';\r\nimport getLanguageChangeButton from '../components/languageChangeButton';\r\nimport { pause } from '../helpers/schedulers/pause';\r\nimport fixBase64String from '../helpers/fixBase64String';\r\n\r\nconst FETCH_INTERVAL = 3;\r\n\r\nlet onFirstMount = async() => {\r\n  const pageElement = page.pageEl;\r\n  const imageDiv = pageElement.querySelector('.auth-image') as HTMLDivElement;\r\n\r\n  let preloader = putPreloader(imageDiv, true);\r\n\r\n  const inputWrapper = document.createElement('div');\r\n  inputWrapper.classList.add('input-wrapper');\r\n\r\n  const btnBack = Button('btn-primary btn-secondary btn-primary-transparent primary', {text: 'Login.QR.Cancel'});\r\n  inputWrapper.append(btnBack);\r\n\r\n  getLanguageChangeButton(inputWrapper);\r\n\r\n  const container = imageDiv.parentElement;\r\n\r\n  const h4 = document.createElement('h4');\r\n  _i18n(h4, 'Login.QR.Title');\r\n\r\n  const helpList = document.createElement('ol');\r\n  helpList.classList.add('qr-description');\r\n  (['Login.QR.Help1', 'Login.QR.Help2', 'Login.QR.Help3'] as LangPackKey[]).forEach((key) => {\r\n    const li = document.createElement('li');\r\n    li.append(i18n(key));\r\n    helpList.append(li);\r\n  });\r\n\r\n  container.append(h4, helpList, inputWrapper);\r\n\r\n  btnBack.addEventListener('click', () => {\r\n    import('./pageSignIn').then(m => m.default.mount());\r\n    stop = true;\r\n  });\r\n  \r\n  const results = await Promise.all([\r\n    import('qr-code-styling' as any)\r\n  ]);\r\n  const QRCodeStyling = results[0].default;\r\n\r\n  let stop = false;\r\n  rootScope.addEventListener('user_auth', () => {\r\n    stop = true;\r\n    cachedPromise = null;\r\n  }, {once: true});\r\n  \r\n  let options: {dcId?: DcId, ignoreErrors: true} = {ignoreErrors: true};\r\n  let prevToken: Uint8Array | number[];\r\n\r\n  const iterate = async(isLoop: boolean) => {\r\n    try {\r\n      let loginToken = await apiManager.invokeApi('auth.exportLoginToken', {\r\n        api_id: App.id,\r\n        api_hash: App.hash,\r\n        except_ids: []\r\n      }, {ignoreErrors: true});\r\n  \r\n      if(loginToken._ === 'auth.loginTokenMigrateTo') {\r\n        if(!options.dcId) {\r\n          options.dcId = loginToken.dc_id as DcId;\r\n          apiManager.setBaseDcId(loginToken.dc_id);\r\n          //continue;\r\n        }\r\n        \r\n        loginToken = await apiManager.invokeApi('auth.importLoginToken', {\r\n          token: loginToken.token\r\n        }, options) as AuthLoginToken.authLoginToken;\r\n      }\r\n\r\n      if(loginToken._ === 'auth.loginTokenSuccess') {\r\n        const authorization = loginToken.authorization as any as AuthAuthorization.authAuthorization;\r\n        apiManager.setUser(authorization.user);\r\n        import('./pageIm').then(m => m.default.mount());\r\n        return true;\r\n      }\r\n\r\n      /* // to base64\r\n      var decoder = new TextDecoder('utf8');\r\n      var b64encoded = btoa(String.fromCharCode.apply(null, [...loginToken.token])); */\r\n\r\n      if(!prevToken || !bytesCmp(prevToken, loginToken.token)) {\r\n        prevToken = loginToken.token;\r\n\r\n        let encoded = bytesToBase64(loginToken.token);\r\n        let url = \"tg://login?token=\" + fixBase64String(encoded, true);\r\n\r\n        const style = window.getComputedStyle(document.documentElement);\r\n        const surfaceColor = style.getPropertyValue('--surface-color').trim();\r\n        const textColor = style.getPropertyValue('--primary-text-color').trim();\r\n        const primaryColor = style.getPropertyValue('--primary-color').trim();\r\n\r\n        const logoUrl = await fetch('assets/img/logo_padded.svg')\r\n        .then(res => res.text())\r\n        .then(text => {\r\n          text = text.replace(/(fill:).+?(;)/, `$1${primaryColor}$2`);\r\n          const blob = new Blob([text], {type: 'image/svg+xml;charset=utf-8'});\r\n\r\n          // * because iOS Safari doesn't want to eat objectURL\r\n          return new Promise<string>((resolve) => {\r\n            const reader = new FileReader();\r\n            reader.onload = (e) => {\r\n              resolve(e.target.result as string);\r\n            };\r\n            reader.readAsDataURL(blob);\r\n          });\r\n          //return URL.createObjectURL(blob);\r\n        });\r\n\r\n        const qrCode = new QRCodeStyling({\r\n          width: 240 * window.devicePixelRatio,\r\n          height: 240 * window.devicePixelRatio,\r\n          data: url,\r\n          image: logoUrl,\r\n          dotsOptions: {\r\n            color: textColor,\r\n            type: 'rounded'\r\n          },\r\n          cornersSquareOptions: {\r\n            type: 'extra-rounded'\r\n          },\r\n          imageOptions: {\r\n            imageSize: 1,\r\n            margin: 0\r\n          },\r\n          backgroundOptions: {\r\n            color: surfaceColor\r\n          },\r\n          qrOptions: {\r\n            errorCorrectionLevel: \"L\"\r\n          }\r\n        });\r\n\r\n        qrCode.append(imageDiv);\r\n        (imageDiv.lastChild as HTMLCanvasElement).classList.add('qr-canvas');\r\n\r\n        let promise: Promise<void>;\r\n        if(qrCode._drawingPromise) {\r\n          promise = qrCode._drawingPromise;\r\n        } else {\r\n          promise = Promise.race([\r\n            pause(1000),\r\n            new Promise<void>((resolve) => {\r\n              qrCode._canvas._image.addEventListener('load', () => {\r\n                window.requestAnimationFrame(() => resolve());\r\n              }, {once: true});\r\n            })\r\n          ]);\r\n        }\r\n\r\n        // * это костыль, но библиотека не предоставляет никаких событий\r\n        await promise.then(() => {\r\n          if(preloader) {\r\n            preloader.style.animation = 'hide-icon .4s forwards';\r\n\r\n            const c = imageDiv.children[1] as HTMLElement;\r\n            c.style.display = 'none';\r\n            c.style.animation = 'grow-icon .4s forwards';\r\n            setTimeout(() => {\r\n              c.style.display = '';\r\n            }, 150);\r\n\r\n            setTimeout(() => {\r\n              c.style.animation = '';\r\n            }, 500);\r\n            preloader = undefined;\r\n          } else {\r\n            Array.from(imageDiv.children).slice(0, -1).forEach(el => {\r\n              el.remove();\r\n            });\r\n          }\r\n        });\r\n      }\r\n\r\n      if(isLoop) {\r\n        let timestamp = Date.now() / 1000;\r\n        let diff = loginToken.expires - timestamp - serverTimeManager.serverTimeOffset;\r\n  \r\n        await pause(diff > FETCH_INTERVAL ? 1e3 * FETCH_INTERVAL : 1e3 * diff | 0);\r\n      }\r\n    } catch(err) {\r\n      switch((err as ApiError).type) {\r\n        case 'SESSION_PASSWORD_NEEDED':\r\n          console.warn('pageSignQR: SESSION_PASSWORD_NEEDED');\r\n          (err as ApiError).handled = true;\r\n          import('./pagePassword').then(m => m.default.mount());\r\n          stop = true;\r\n          cachedPromise = null;\r\n          break;\r\n        default:\r\n          console.error('pageSignQR: default error:', err);\r\n          stop = true;\r\n          break;\r\n      }\r\n\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  };\r\n\r\n  //await iterate(false);\r\n\r\n  return async() => {\r\n    stop = false;\r\n\r\n    do {\r\n      if(stop) {\r\n        break;\r\n      }\r\n  \r\n      const needBreak = await iterate(true);\r\n      if(needBreak) {\r\n        break;\r\n      }\r\n    } while(true);\r\n  };\r\n};\r\n\r\nlet cachedPromise: Promise<() => Promise<void>>;\r\nconst page = new Page('page-signQR', true, () => {\r\n  return cachedPromise;\r\n}, () => {\r\n  //console.log('onMount');\r\n  if(!cachedPromise) cachedPromise = onFirstMount();\r\n  cachedPromise.then(func => {\r\n    func();\r\n  });\r\n\r\n  appStateManager.pushToState('authState', {_: 'authStateSignQr'});\r\n});\r\n\r\nexport default page;\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport mediaSizes from '../helpers/mediaSizes';\r\nimport { AuthSentCode, AuthSentCodeType, AuthSignIn } from '../layer';\r\nimport appStateManager from '../lib/appManagers/appStateManager';\r\nimport apiManager from '../lib/mtproto/mtprotoworker';\r\nimport Page from './page';\r\nimport pageSignIn from './pageSignIn';\r\nimport TrackingMonkey from '../components/monkeys/tracking';\r\nimport CodeInputField from '../components/codeInputField';\r\nimport { i18n, LangPackKey } from '../lib/langPack';\r\nimport { randomLong } from '../helpers/random';\r\nimport replaceContent from '../helpers/dom/replaceContent';\r\n\r\nlet authCode: AuthSentCode.authSentCode = null;\r\n\r\nlet headerElement: HTMLHeadElement = null;\r\nlet sentTypeElement: HTMLParagraphElement = null;\r\nlet codeInput: HTMLInputElement;\r\n\r\nlet onFirstMount = (): Promise<any> => {\r\n  const CODELENGTH = (authCode.type as AuthSentCodeType.authSentCodeTypeApp).length;\r\n\r\n  const codeInputField = new CodeInputField({\r\n    label: 'Code',\r\n    name: randomLong(),\r\n    length: CODELENGTH,\r\n    onFill: (code) => {\r\n      submitCode(code);\r\n    }\r\n  });\r\n\r\n  codeInput = codeInputField.input as HTMLInputElement;\r\n\r\n  page.pageEl.querySelector('.input-wrapper').append(codeInputField.container);\r\n\r\n  const editButton = page.pageEl.querySelector('.phone-edit') as HTMLElement;\r\n\r\n  editButton.addEventListener('click', function() {\r\n    return pageSignIn.mount();\r\n  });\r\n\r\n  const cleanup = () => {\r\n    setTimeout(() => {\r\n      monkey.remove();\r\n    }, 300);\r\n  };\r\n\r\n  const submitCode = (code: string) => {\r\n    codeInput.setAttribute('disabled', 'true');\r\n\r\n    const params: AuthSignIn = {\r\n      phone_number: authCode.phone_number,\r\n      phone_code_hash: authCode.phone_code_hash,\r\n      phone_code: code\r\n    };\r\n\r\n    //console.log('invoking auth.signIn with params:', params);\r\n\r\n    apiManager.invokeApi('auth.signIn', params, {ignoreErrors: true})\r\n    .then((response) => {\r\n      //console.log('auth.signIn response:', response);\r\n      \r\n      switch(response._) {\r\n        case 'auth.authorization':\r\n          apiManager.setUser(response.user);\r\n\r\n          import('./pageIm').then(m => {\r\n            m.default.mount();\r\n          });\r\n          cleanup();\r\n          break;\r\n        case 'auth.authorizationSignUpRequired':\r\n          //console.log('Registration needed!');\r\n\r\n          import('./pageSignUp').then(m => {\r\n            m.default.mount({\r\n              'phone_number': authCode.phone_number,\r\n              'phone_code_hash': authCode.phone_code_hash\r\n            });\r\n          });\r\n\r\n          cleanup();\r\n          break;\r\n        /* default:\r\n          codeInput.innerText = response._;\r\n          break; */\r\n      }\r\n    }).catch(async(err) => {\r\n      let good = false;\r\n      switch(err.type) {\r\n        case 'SESSION_PASSWORD_NEEDED':\r\n          //console.warn('pageAuthCode: SESSION_PASSWORD_NEEDED');\r\n          good = true;\r\n          err.handled = true;\r\n          await (await import('./pagePassword')).default.mount(); // lol\r\n          setTimeout(() => {\r\n            codeInput.value = '';\r\n          }, 300);\r\n          break;\r\n        case 'PHONE_CODE_EXPIRED':\r\n          codeInput.classList.add('error');\r\n          replaceContent(codeInputField.label, i18n('PHONE_CODE_EXPIRED'));\r\n          break;\r\n        case 'PHONE_CODE_EMPTY':\r\n        case 'PHONE_CODE_INVALID':\r\n          codeInput.classList.add('error');\r\n          replaceContent(codeInputField.label, i18n('PHONE_CODE_INVALID'));\r\n          break;\r\n        default:\r\n          codeInputField.label.innerText = err.type;\r\n          break;\r\n      }\r\n\r\n      if(!good) {\r\n        codeInputField.select();\r\n      }\r\n\r\n      codeInput.removeAttribute('disabled');\r\n    });\r\n  };\r\n\r\n  const imageDiv = page.pageEl.querySelector('.auth-image') as HTMLDivElement;\r\n  const size = mediaSizes.isMobile ? 100 : 166;\r\n  const monkey = new TrackingMonkey(codeInputField, size);\r\n  imageDiv.append(monkey.container);\r\n  return monkey.load();\r\n};\r\n\r\nconst page = new Page('page-authCode', true, onFirstMount, (_authCode: typeof authCode) => {\r\n  authCode = _authCode;\r\n\r\n  if(!headerElement) {\r\n    headerElement = page.pageEl.getElementsByClassName('phone')[0] as HTMLHeadElement;\r\n    sentTypeElement = page.pageEl.getElementsByClassName('sent-type')[0] as HTMLParagraphElement;\r\n  } else {\r\n    codeInput.value = '';\r\n\r\n    const evt = document.createEvent('HTMLEvents');\r\n    evt.initEvent('input', false, true);\r\n    codeInput.dispatchEvent(evt);\r\n  }\r\n\r\n  headerElement.innerText = authCode.phone_number;\r\n  let key: LangPackKey, args: any[];\r\n  switch(authCode.type._) {\r\n    case 'auth.sentCodeTypeSms':\r\n      key = 'Login.Code.SentSms';\r\n      break;\r\n    case 'auth.sentCodeTypeApp': \r\n      key = 'Login.Code.SentInApp';\r\n      break;\r\n    case 'auth.sentCodeTypeCall': \r\n      key = 'Login.Code.SentCall';\r\n      break;\r\n    default:\r\n      key = 'Login.Code.SentUnknown';\r\n      args = [authCode.type._];\r\n      break;\r\n  }\r\n\r\n  replaceContent(sentTypeElement, i18n(key, args));\r\n\r\n  appStateManager.pushToState('authState', {_: 'authStateAuthCode', sentCode: _authCode});\r\n}, () => {\r\n  codeInput.focus();\r\n});\r\n\r\nexport default page;\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nexport default function replaceContent(elem: HTMLElement, node: string | Node) {\r\n  if(typeof(node) === 'string') {\r\n    elem.innerHTML = node;\r\n    return;\r\n  }\r\n\r\n  // * children.length doesn't count text nodes\r\n  const firstChild = elem.firstChild;\r\n  if(firstChild) {\r\n    if(elem.lastChild === firstChild) {\r\n      firstChild.replaceWith(node);\r\n    } else {\r\n      elem.textContent = '';\r\n      elem.append(node);\r\n    }\r\n  } else {\r\n    elem.append(node);\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport simulateEvent from \"../helpers/dom/dispatchEvent\";\r\nimport findUpAttribute from \"../helpers/dom/findUpAttribute\";\r\nimport getRichValue from \"../helpers/dom/getRichValue\";\r\nimport isInputEmpty from \"../helpers/dom/isInputEmpty\";\r\nimport selectElementContents from \"../helpers/dom/selectElementContents\";\r\nimport { MessageEntity } from \"../layer\";\r\nimport { i18n, LangPackKey, _i18n } from \"../lib/langPack\";\r\nimport RichTextProcessor from \"../lib/richtextprocessor\";\r\nimport SetTransition from \"./singleTransition\";\r\n\r\nlet init = () => {\r\n  document.addEventListener('paste', (e) => {\r\n    if(!findUpAttribute(e.target, 'contenteditable=\"true\"')) {\r\n      return;\r\n    }\r\n\r\n    e.preventDefault();\r\n    let text: string, entities: MessageEntity[];\r\n\r\n    // @ts-ignore\r\n    let plainText: string = (e.originalEvent || e).clipboardData.getData('text/plain');\r\n    let usePlainText = true;\r\n\r\n    // @ts-ignore\r\n    let html: string = (e.originalEvent || e).clipboardData.getData('text/html');\r\n    if(html.trim()) {\r\n      html = html.replace(/<style([\\s\\S]*)<\\/style>/, '');\r\n      html = html.replace(/<!--([\\s\\S]*)-->/, '');\r\n\r\n      const match = html.match(/<body>([\\s\\S]*)<\\/body>/);\r\n      if(match) {\r\n        html = match[1].trim();\r\n      }\r\n\r\n      let span: HTMLElement = document.createElement('span');\r\n      span.innerHTML = html;\r\n\r\n      let curChild = span.firstChild;\r\n      while(curChild) { // * fix whitespace between elements like <p>asd</p>\\n<p>zxc</p>\r\n        let nextSibling = curChild.nextSibling;\r\n        if(curChild.nodeType === 3) {\r\n          if(!curChild.nodeValue.trim()) {\r\n            curChild.remove();\r\n          }\r\n        }\r\n\r\n        curChild = nextSibling;\r\n      }\r\n\r\n      const richValue = getRichValue(span, true);\r\n      if(richValue.value.replace(/\\s/g, '').length === plainText.replace(/\\s/g, '').length) {\r\n        text = richValue.value;\r\n        entities = richValue.entities;\r\n        usePlainText = false;\r\n  \r\n        let entities2 = RichTextProcessor.parseEntities(text);\r\n        entities2 = entities2.filter(e => e._ === 'messageEntityEmoji' || e._ === 'messageEntityLinebreak');\r\n        RichTextProcessor.mergeEntities(entities, entities2);\r\n      }\r\n    }\r\n    \r\n    if(usePlainText) {\r\n      text = plainText;\r\n      entities = RichTextProcessor.parseEntities(text);\r\n      entities = entities.filter(e => e._ === 'messageEntityEmoji' || e._ === 'messageEntityLinebreak');\r\n    }\r\n\r\n    text = RichTextProcessor.wrapDraftText(text, {entities});\r\n    \r\n    window.document.execCommand('insertHTML', false, text);\r\n  });\r\n\r\n  init = null;\r\n};\r\n\r\n// ! it doesn't respect symbols other than strongs\r\n/* const checkAndSetRTL = (input: HTMLElement) => {\r\n  //const isEmpty = isInputEmpty(input);\r\n  //console.log('input', isEmpty);\r\n\r\n  //const char = [...getRichValue(input)][0];\r\n  const char = (input instanceof HTMLInputElement ? input.value : input.innerText)[0];\r\n  let direction = 'ltr';\r\n  if(char && checkRTL(char)) {\r\n    direction = 'rtl';\r\n  }\r\n\r\n  //console.log('RTL', direction, char);\r\n\r\n  input.style.direction = direction;\r\n}; */\r\n\r\nexport enum InputState {\r\n  Neutral = 0,\r\n  Valid = 1,\r\n  Error = 2\r\n};\r\n\r\nexport type InputFieldOptions = {\r\n  placeholder?: LangPackKey, \r\n  label?: LangPackKey, \r\n  labelOptions?: any[],\r\n  labelText?: string,\r\n  name?: string, \r\n  maxLength?: number, \r\n  showLengthOn?: number,\r\n  plainText?: true,\r\n  animate?: boolean,\r\n  required?: boolean,\r\n  canBeEdited?: boolean,\r\n  validate?: () => boolean\r\n};\r\n\r\nclass InputField {\r\n  public container: HTMLElement;\r\n  public input: HTMLElement;\r\n  public inputFake: HTMLElement;\r\n  public label: HTMLLabelElement;\r\n\r\n  public originalValue: string;\r\n\r\n  public required: boolean;\r\n  public validate: () => boolean;\r\n\r\n  //public onLengthChange: (length: number, isOverflow: boolean) => void;\r\n  // protected wasInputFakeClientHeight: number;\r\n  // protected showScrollDebounced: () => void;\r\n\r\n  constructor(public options: InputFieldOptions = {}) {\r\n    this.container = document.createElement('div');\r\n    this.container.classList.add('input-field');\r\n\r\n    this.required = options.required;\r\n    this.validate = options.validate;\r\n\r\n    if(options.maxLength !== undefined && options.showLengthOn === undefined) {\r\n      options.showLengthOn = Math.min(40, Math.round(options.maxLength / 3));\r\n    }\r\n\r\n    const {placeholder, maxLength, showLengthOn, name, plainText, canBeEdited = true} = options;\r\n\r\n    let label = options.label || options.labelText;\r\n\r\n    let input: HTMLElement;\r\n    if(!plainText) {\r\n      if(init) {\r\n        init();\r\n      }\r\n\r\n      this.container.innerHTML = `\r\n      <div contenteditable=\"${String(!!canBeEdited)}\" class=\"input-field-input\"></div>\r\n      `;\r\n\r\n      input = this.container.firstElementChild as HTMLElement;\r\n      const observer = new MutationObserver(() => {\r\n        //checkAndSetRTL(input);\r\n\r\n        if(processInput) {\r\n          processInput();\r\n        }\r\n      });\r\n\r\n      // * because if delete all characters there will br left\r\n      input.addEventListener('input', () => {\r\n        if(isInputEmpty(input)) {\r\n          input.innerHTML = '';\r\n        }\r\n\r\n        if(this.inputFake) {\r\n          this.inputFake.innerHTML = input.innerHTML;\r\n          this.onFakeInput();\r\n        }\r\n      });\r\n      \r\n      // ! childList for paste first symbol\r\n      observer.observe(input, {characterData: true, childList: true, subtree: true});\r\n\r\n      if(options.animate) {\r\n        input.classList.add('scrollable', 'scrollable-y');\r\n        // this.wasInputFakeClientHeight = 0;\r\n        // this.showScrollDebounced = debounce(() => this.input.classList.remove('no-scrollbar'), 150, false, true);\r\n        this.inputFake = document.createElement('div');\r\n        this.inputFake.setAttribute('contenteditable', 'true');\r\n        this.inputFake.className = input.className + ' input-field-input-fake';\r\n      }\r\n    } else {\r\n      this.container.innerHTML = `\r\n      <input type=\"text\" ${name ? `name=\"${name}\"` : ''} autocomplete=\"off\" ${label ? 'required=\"\"' : ''} class=\"input-field-input\">\r\n      `;\r\n\r\n      input = this.container.firstElementChild as HTMLElement;\r\n      //input.addEventListener('input', () => checkAndSetRTL(input));\r\n    }\r\n\r\n    input.setAttribute('dir', 'auto');\r\n\r\n    if(placeholder) {\r\n      _i18n(input, placeholder, undefined, 'placeholder');\r\n\r\n      if(this.inputFake) {\r\n        _i18n(this.inputFake, placeholder, undefined, 'placeholder');\r\n      }\r\n    }\r\n\r\n    if(label || placeholder) {\r\n      const border = document.createElement('div');\r\n      border.classList.add('input-field-border');\r\n      this.container.append(border);\r\n    }\r\n\r\n    if(label) {\r\n      this.label = document.createElement('label');\r\n      this.setLabel();\r\n      this.container.append(this.label);\r\n    }\r\n\r\n    let processInput: () => void;\r\n    if(maxLength) {\r\n      const labelEl = this.container.lastElementChild as HTMLLabelElement;\r\n      let showingLength = false;\r\n\r\n      processInput = () => {\r\n        const wasError = input.classList.contains('error');\r\n        // * https://stackoverflow.com/a/54369605 #2 to count emoji as 1 symbol\r\n        const inputLength = plainText ? (input as HTMLInputElement).value.length : [...getRichValue(input, false).value].length;\r\n        const diff = maxLength - inputLength;\r\n        const isError = diff < 0;\r\n        input.classList.toggle('error', isError);\r\n\r\n        //this.onLengthChange && this.onLengthChange(inputLength, isError);\r\n\r\n        if(isError || diff <= showLengthOn) {\r\n          this.setLabel();\r\n          labelEl.append(` (${maxLength - inputLength})`);\r\n          if(!showingLength) showingLength = true;\r\n        } else if((wasError && !isError) || showingLength) {\r\n          this.setLabel();\r\n          showingLength = false;\r\n        }\r\n      };\r\n\r\n      input.addEventListener('input', processInput);\r\n    }\r\n\r\n    this.input = input;\r\n  }\r\n\r\n  public select() {\r\n    if(!this.value) { // * avoid selecting whole empty field on iOS devices\r\n      return;\r\n    }\r\n\r\n    if(this.options.plainText) {\r\n      (this.input as HTMLInputElement).select(); // * select text\r\n    } else {\r\n      selectElementContents(this.input);\r\n    }\r\n  }\r\n\r\n  public setLabel() {\r\n    this.label.textContent = '';\r\n    if(this.options.labelText) {\r\n      this.label.innerHTML = this.options.labelText;\r\n    } else {\r\n      this.label.append(i18n(this.options.label, this.options.labelOptions));\r\n    }\r\n  }\r\n\r\n  public onFakeInput(setHeight = true) {\r\n    const {scrollHeight: newHeight/* , clientHeight */} = this.inputFake;\r\n    /* if(this.wasInputFakeClientHeight && this.wasInputFakeClientHeight !== clientHeight) {\r\n      this.input.classList.add('no-scrollbar'); // ! в сафари может вообще не появиться скролл после анимации, так как ему нужен полный reflow блока с overflow.\r\n      this.showScrollDebounced();\r\n    } */\r\n\r\n    const currentHeight = +this.input.style.height.replace('px', '');\r\n    if(currentHeight === newHeight) {\r\n      return;\r\n    }\r\n\r\n    const TRANSITION_DURATION_FACTOR = 50;\r\n    const transitionDuration = Math.round(\r\n      TRANSITION_DURATION_FACTOR * Math.log(Math.abs(newHeight - currentHeight)),\r\n    );\r\n\r\n    // this.wasInputFakeClientHeight = clientHeight;\r\n    this.input.style.transitionDuration = `${transitionDuration}ms`;\r\n\r\n    if(setHeight) {\r\n      this.input.style.height = newHeight ? newHeight + 'px' : '';\r\n    }\r\n\r\n    const className = 'is-changing-height';\r\n    SetTransition(this.input, className, true, transitionDuration, () => {\r\n      this.input.classList.remove(className);\r\n    });\r\n  }\r\n\r\n  get value() {\r\n    return this.options.plainText ? (this.input as HTMLInputElement).value : getRichValue(this.input, false).value;\r\n    //return getRichValue(this.input);\r\n  }\r\n\r\n  set value(value: string) {\r\n    this.setValueSilently(value, false);\r\n\r\n    simulateEvent(this.input, 'input');\r\n  }\r\n\r\n  public setValueSilently(value: string, fireFakeInput = true) {\r\n    if(this.options.plainText) {\r\n      (this.input as HTMLInputElement).value = value;\r\n    } else {\r\n      this.input.innerHTML = value;\r\n      \r\n      if(this.inputFake) {\r\n        this.inputFake.innerHTML = value;\r\n\r\n        if(fireFakeInput) {\r\n          this.onFakeInput();\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  public isChanged() {\r\n    return this.value !== this.originalValue;\r\n  }\r\n\r\n  public isValid() {\r\n    return !this.input.classList.contains('error') && \r\n      (!this.validate || this.validate()) && \r\n      (!this.required || !isInputEmpty(this.input));\r\n  }\r\n\r\n  public isValidToChange() {\r\n    return this.isValid() && this.isChanged();\r\n  }\r\n\r\n  public setDraftValue(value = '', silent = false) {\r\n    if(!this.options.plainText) {\r\n      value = RichTextProcessor.wrapDraftText(value);\r\n    }\r\n\r\n    if(silent) {\r\n      this.setValueSilently(value, false); \r\n    } else {\r\n      this.value = value;\r\n    }\r\n  }\r\n\r\n  public setOriginalValue(value: InputField['originalValue'] = '', silent = false) {\r\n    this.originalValue = value;\r\n    this.setDraftValue(value, silent);\r\n  }\r\n\r\n  public setState(state: InputState, label?: LangPackKey) {\r\n    if(label) {\r\n      this.label.textContent = '';\r\n      this.label.append(i18n(label, this.options.labelOptions));\r\n    }\r\n\r\n    this.input.classList.toggle('error', !!(state & InputState.Error));\r\n    this.input.classList.toggle('valid', !!(state & InputState.Valid));\r\n  }\r\n\r\n  public setError(label?: LangPackKey) {\r\n    this.setState(InputState.Error, label);\r\n  }\r\n}\r\n\r\nexport default InputField;\r\n","// https://stackoverflow.com/a/6150060\nexport default function selectElementContents(el: HTMLElement) {\n  const range = document.createRange();\n  range.selectNodeContents(el);\n  const sel = window.getSelection();\n  sel.removeAllRanges();\n  sel.addRange(range);\n}\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport { IS_TOUCH_SUPPORTED } from \"../environment/touchSupport\";\r\nimport { logger, LogTypes } from \"../lib/logger\";\r\nimport fastSmoothScroll, { ScrollOptions } from \"../helpers/fastSmoothScroll\";\r\nimport useHeavyAnimationCheck from \"../hooks/useHeavyAnimationCheck\";\r\nimport { cancelEvent } from \"../helpers/dom/cancelEvent\";\r\n/*\r\nvar el = $0;\r\nvar height = 0;\r\nvar checkUp = false;\r\n\r\ndo {\r\n  height += el.scrollHeight;\r\n} while(el = (checkUp ? el.previousElementSibling : el.nextElementSibling));\r\nconsole.log(height);\r\n*/\r\n\r\n/*\r\nArray.from($0.querySelectorAll('.bubble-content')).forEach(_el => {\r\n\t//_el.style.display = '';\t\r\n\t//return;\r\n\r\n\tlet el = _el.parentElement;\r\n\tlet height = el.scrollHeight;\r\n\tlet width = el.scrollWidth;\r\n\tel.style.width = width + 'px';\r\n\tel.style.height = height + 'px';\r\n\t_el.style.display = 'none';\r\n});\r\n*/\r\n\r\n/* const scrollables: Map<HTMLElement, Scrollable> = new Map();\r\nconst scrollsIntersector = new IntersectionObserver(entries => {\r\n  for(let entry of entries) {\r\n    const scrollable = scrollables.get(entry.target as HTMLElement);\r\n\r\n    if(entry.isIntersecting) {\r\n      scrollable.isVisible = true;\r\n    } else {\r\n      scrollable.isVisible = false;\r\n\r\n      if(!isInDOM(entry.target)) {\r\n        scrollsIntersector.unobserve(scrollable.container);\r\n        scrollables.delete(scrollable.container);\r\n      }\r\n    }\r\n  }\r\n}); */\r\n\r\nexport class ScrollableBase {\r\n  protected log: ReturnType<typeof logger>;\r\n\r\n  public splitUp: HTMLElement;\r\n  public onScrollMeasure: number = 0;\r\n\r\n  public lastScrollPosition: number = 0;\r\n  public lastScrollDirection: number = 0;\r\n\r\n  public onAdditionalScroll: () => void;\r\n  public onScrolledTop: () => void;\r\n  public onScrolledBottom: () => void;\r\n\r\n  public isHeavyAnimationInProgress = false;\r\n  protected needCheckAfterAnimation = false;\r\n\r\n  public checkForTriggers?: () => void;\r\n\r\n  public scrollProperty: 'scrollTop' | 'scrollLeft';\r\n  \r\n  private removeHeavyAnimationListener: () => void;\r\n\r\n  constructor(public el: HTMLElement, logPrefix = '', public container: HTMLElement = document.createElement('div')) {\r\n    this.container.classList.add('scrollable');\r\n\r\n    this.log = logger('SCROLL' + (logPrefix ? '-' + logPrefix : ''), LogTypes.Error);\r\n\r\n    if(el) {\r\n      Array.from(el.children).forEach(c => this.container.append(c));\r\n\r\n      el.append(this.container);\r\n    }\r\n    //this.onScroll();\r\n  }\r\n\r\n  public setListeners() {\r\n    if(this.removeHeavyAnimationListener) {\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('resize', this.onScroll, {passive: true});\r\n    this.container.addEventListener('scroll', this.onScroll, {passive: true, capture: true});\r\n\r\n    this.removeHeavyAnimationListener = useHeavyAnimationCheck(() => {\r\n      this.isHeavyAnimationInProgress = true;\r\n\r\n      if(this.onScrollMeasure) {\r\n        this.needCheckAfterAnimation = true;\r\n        window.cancelAnimationFrame(this.onScrollMeasure);\r\n      }\r\n    }, () => {\r\n      this.isHeavyAnimationInProgress = false;\r\n\r\n      if(this.needCheckAfterAnimation) {\r\n        this.onScroll();\r\n        this.needCheckAfterAnimation = false;\r\n      }\r\n    });\r\n  }\r\n\r\n  public removeListeners() {\r\n    if(!this.removeHeavyAnimationListener) {\r\n      return;\r\n    }\r\n\r\n    window.removeEventListener('resize', this.onScroll);\r\n    this.container.removeEventListener('scroll', this.onScroll, {capture: true});\r\n\r\n    this.removeHeavyAnimationListener();\r\n  }\r\n\r\n  public append(element: HTMLElement) {\r\n    this.container.append(element);\r\n  }\r\n\r\n  public scrollIntoViewNew(options: Omit<ScrollOptions, 'container'>) {\r\n    //return Promise.resolve();\r\n    return fastSmoothScroll({\r\n      ...options,\r\n      container: this.container\r\n    });\r\n  }\r\n\r\n  public onScroll = () => {\r\n    //if(this.debug) {\r\n      //this.log('onScroll call', this.onScrollMeasure);\r\n    //}\r\n\r\n    //return;\r\n\r\n    if(this.isHeavyAnimationInProgress) {\r\n      if(this.onScrollMeasure) {\r\n        window.cancelAnimationFrame(this.onScrollMeasure);\r\n      }\r\n\r\n      this.needCheckAfterAnimation = true;\r\n      return;\r\n    }\r\n\r\n    //if(this.onScrollMeasure || ((this.scrollLocked || (!this.onScrolledTop && !this.onScrolledBottom)) && !this.splitUp && !this.onAdditionalScroll)) return;\r\n    if((!this.onScrolledTop && !this.onScrolledBottom) && !this.splitUp && !this.onAdditionalScroll) return;\r\n    if(this.onScrollMeasure) window.cancelAnimationFrame(this.onScrollMeasure);\r\n    this.onScrollMeasure = window.requestAnimationFrame(() => {\r\n      this.onScrollMeasure = 0;\r\n\r\n      const scrollPosition = this.container[this.scrollProperty];\r\n      this.lastScrollDirection = this.lastScrollPosition === scrollPosition ? 0 : (this.lastScrollPosition < scrollPosition ? 1 : -1); // * 1 - bottom, -1 - top\r\n      this.lastScrollPosition = scrollPosition;\r\n\r\n      if(this.onAdditionalScroll && this.lastScrollDirection !== 0) {\r\n        this.onAdditionalScroll();\r\n      }\r\n      \r\n      if(this.checkForTriggers) {\r\n        this.checkForTriggers();\r\n      }\r\n    });\r\n  };\r\n}\r\n\r\nexport type SliceSides = 'top' | 'bottom';\r\nexport type SliceSidesContainer = {[k in SliceSides]: boolean};\r\n\r\nexport default class Scrollable extends ScrollableBase {\r\n  public padding: HTMLElement;\r\n  \r\n  public loadedAll: SliceSidesContainer = {top: true, bottom: false};\r\n\r\n  constructor(el: HTMLElement, logPrefix = '', public onScrollOffset = 300, withPaddingContainer?: boolean) {\r\n    super(el, logPrefix);\r\n\r\n    /* if(withPaddingContainer) {\r\n      this.padding = document.createElement('div');\r\n      this.padding.classList.add('scrollable-padding');\r\n      Array.from(this.container.children).forEach(c => this.padding.append(c));\r\n      this.container.append(this.padding);\r\n    } */\r\n\r\n    this.container.classList.add('scrollable-y');\r\n    this.setListeners();\r\n    this.scrollProperty = 'scrollTop';\r\n  }\r\n\r\n  public setVirtualContainer(el?: HTMLElement) {\r\n    this.splitUp = el;\r\n    this.log('setVirtualContainer:', el, this);\r\n  }\r\n\r\n  public checkForTriggers = () => {\r\n    if((!this.onScrolledTop && !this.onScrolledBottom)) return;\r\n\r\n    if(this.isHeavyAnimationInProgress) {\r\n      this.onScroll();\r\n      return;\r\n    }\r\n\r\n    const scrollHeight = this.container.scrollHeight;\r\n    if(!scrollHeight) { // незачем вызывать триггеры если блок пустой или не виден\r\n      return;\r\n    }\r\n\r\n    const clientHeight = this.container.clientHeight;\r\n    const maxScrollTop = scrollHeight - clientHeight;\r\n    const scrollTop = this.lastScrollPosition;\r\n\r\n    //this.log('checkForTriggers:', scrollTop, maxScrollTop);\r\n\r\n    if(this.onScrolledTop && scrollTop <= this.onScrollOffset && this.lastScrollDirection <= 0/* && direction === -1 */) {\r\n      this.onScrolledTop();\r\n    }\r\n\r\n    if(this.onScrolledBottom && (maxScrollTop - scrollTop) <= this.onScrollOffset && this.lastScrollDirection >= 0/* && direction === 1 */) {\r\n      this.onScrolledBottom();\r\n    }\r\n  };\r\n\r\n  public prepend(...elements: (HTMLElement | DocumentFragment)[]) {\r\n    (this.splitUp || this.padding || this.container).prepend(...elements);\r\n  }\r\n\r\n  public append(...elements: (HTMLElement | DocumentFragment)[]) {\r\n    (this.splitUp || this.padding || this.container).append(...elements);\r\n  }\r\n\r\n  public getDistanceToEnd() {\r\n    return this.scrollHeight - Math.round(this.scrollTop + this.container.offsetHeight);\r\n  }\r\n\r\n  get isScrolledDown() {\r\n    return this.getDistanceToEnd() <= 1;\r\n  }\r\n\r\n  set scrollTop(y: number) {\r\n    this.container.scrollTop = y;\r\n  }\r\n  \r\n  get scrollTop() {\r\n    //this.log.trace('get scrollTop');\r\n    return this.container.scrollTop;\r\n  }\r\n  \r\n  get scrollHeight() {\r\n    return this.container.scrollHeight;\r\n  }\r\n}\r\n\r\nexport class ScrollableX extends ScrollableBase {\r\n  constructor(el: HTMLElement, logPrefix = '', public onScrollOffset = 300, public splitCount = 15, public container: HTMLElement = document.createElement('div')) {\r\n    super(el, logPrefix, container);\r\n\r\n    this.container.classList.add('scrollable-x');\r\n\r\n    if(!IS_TOUCH_SUPPORTED) {\r\n      const scrollHorizontally = (e: any) => {\r\n        if(!e.deltaX && this.container.scrollWidth > this.container.clientWidth) {\r\n          this.container.scrollLeft += e.deltaY / 4;\r\n          cancelEvent(e);\r\n        }\r\n      };\r\n      \r\n      this.container.addEventListener('wheel', scrollHorizontally, {passive: false});\r\n    }\r\n\r\n    this.scrollProperty = 'scrollLeft';\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport appStateManager from \"../lib/appManagers/appStateManager\";\r\nimport { getDeepProperty } from \"../helpers/object\";\r\nimport { ripple } from \"./ripple\";\r\nimport { LangPackKey, _i18n } from \"../lib/langPack\";\r\n\r\nexport type CheckboxFieldOptions = {\r\n  text?: LangPackKey,\r\n  textArgs?: any[],\r\n  name?: string, \r\n  round?: boolean, \r\n  toggle?: boolean,\r\n  stateKey?: string,\r\n  stateValues?: any[],\r\n  disabled?: boolean,\r\n  checked?: boolean,\r\n  restriction?: boolean,\r\n  withRipple?: boolean,\r\n  withHover?: boolean,\r\n};\r\nexport default class CheckboxField {\r\n  public input: HTMLInputElement;\r\n  public label: HTMLLabelElement;\r\n  public span: HTMLSpanElement;\r\n\r\n  constructor(options: CheckboxFieldOptions = {}) {\r\n    const label = this.label = document.createElement('label');\r\n    label.classList.add('checkbox-field');\r\n\r\n    if(options.restriction) {\r\n      label.classList.add('checkbox-field-restriction');\r\n    }\r\n\r\n    if(options.round) {\r\n      label.classList.add('checkbox-field-round');\r\n    }\r\n\r\n    if(options.disabled) {\r\n      this.toggleDisability(true);\r\n    }\r\n\r\n    const input = this.input = document.createElement('input');\r\n    input.classList.add('checkbox-field-input');\r\n    input.type = 'checkbox';\r\n    if(options.name) {\r\n      input.id = 'input-' + options.name;\r\n    }\r\n\r\n    if(options.checked) {\r\n      input.checked = true;\r\n    }\r\n\r\n    if(options.stateKey) {\r\n      appStateManager.getState().then(state => {\r\n        const stateValue = getDeepProperty(state, options.stateKey);\r\n        let checked: boolean;\r\n        if(options.stateValues) {\r\n          checked = options.stateValues.indexOf(stateValue) === 1;\r\n        } else {\r\n          checked = stateValue;\r\n        }\r\n\r\n        this.setValueSilently(checked);\r\n\r\n        input.addEventListener('change', () => {\r\n          let value: any;\r\n          if(options.stateValues) {\r\n            value = options.stateValues[input.checked ? 1 : 0];\r\n          } else {\r\n            value = input.checked;\r\n          }\r\n\r\n          appStateManager.setByKey(options.stateKey, value);\r\n        });\r\n      });\r\n    }\r\n\r\n    let span: HTMLSpanElement;\r\n    if(options.text) {\r\n      span = this.span = document.createElement('span');\r\n      span.classList.add('checkbox-caption');\r\n      _i18n(span, options.text, options.textArgs);\r\n    } else {\r\n      label.classList.add('checkbox-without-caption');\r\n    }\r\n\r\n    label.append(input);\r\n\r\n    if(options.toggle) {\r\n      label.classList.add('checkbox-field-toggle');\r\n\r\n      const toggle = document.createElement('div');\r\n      toggle.classList.add('checkbox-toggle');\r\n      label.append(toggle);\r\n    } else {\r\n      const box = document.createElement('div');\r\n      box.classList.add('checkbox-box');\r\n  \r\n      const checkSvg = document.createElementNS(\"http://www.w3.org/2000/svg\", \"svg\");\r\n      checkSvg.classList.add('checkbox-box-check');\r\n      checkSvg.setAttributeNS(null, 'viewBox', '0 0 24 24');\r\n      const use = document.createElementNS(\"http://www.w3.org/2000/svg\", \"use\");\r\n      use.setAttributeNS(null, 'href', '#check');\r\n      use.setAttributeNS(null, 'x', '-1');\r\n      checkSvg.append(use);\r\n  \r\n      const bg = document.createElement('div');\r\n      bg.classList.add('checkbox-box-background');\r\n  \r\n      const border = document.createElement('div');\r\n      border.classList.add('checkbox-box-border');\r\n  \r\n      box.append(border, bg, checkSvg);\r\n  \r\n      label.append(box);\r\n    }\r\n\r\n    if(span) {\r\n      label.append(span);\r\n    }\r\n\r\n    if(options.withRipple) {\r\n      label.classList.add('checkbox-ripple', 'hover-effect');\r\n      ripple(label, undefined, undefined, true);\r\n      //label.prepend(input);\r\n    } else if(options.withHover) {\r\n      label.classList.add('hover-effect');\r\n    }\r\n  }\r\n\r\n  get checked() {\r\n    return this.input.checked;\r\n  }\r\n\r\n  set checked(checked: boolean) {\r\n    /* if(this.checked === checked) {\r\n      return;\r\n    } */\r\n    \r\n    this.setValueSilently(checked);\r\n\r\n    const event = new Event('change', {bubbles: true, cancelable: true});\r\n    this.input.dispatchEvent(event);\r\n  }\r\n\r\n  public setValueSilently(checked: boolean) {\r\n    this.input.checked = checked;\r\n  }\r\n\r\n  public toggleDisability(disable: boolean) {\r\n    this.label.classList.toggle('checkbox-disabled', disable);\r\n    return () => this.toggleDisability(!disable);\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport rootScope from \"../lib/rootScope\";\r\n\r\nconst SetTransition = (\r\n  element: HTMLElement, \r\n  className: string, \r\n  forwards: boolean, \r\n  duration: number, \r\n  onTransitionEnd?: () => void, \r\n  useRafs?: number\r\n) => {\r\n  const {timeout, raf} = element.dataset;\r\n  if(timeout !== undefined) {\r\n    clearTimeout(+timeout);\r\n  }\r\n\r\n  if(raf !== undefined) {\r\n    window.cancelAnimationFrame(+raf);\r\n    if(!useRafs) {\r\n      delete element.dataset.raf;\r\n    }\r\n  }\r\n\r\n  // if(forwards && className && element.classList.contains(className) && !element.classList.contains('animating')) {\r\n  //   return;\r\n  // }\r\n\r\n  if(useRafs && rootScope.settings.animationsEnabled && duration) {\r\n    element.dataset.raf = '' + window.requestAnimationFrame(() => {\r\n      delete element.dataset.raf;\r\n      SetTransition(element, className, forwards, duration, onTransitionEnd, useRafs - 1);\r\n    });\r\n\r\n    return;\r\n  }\r\n\r\n  if(forwards && className) {\r\n    element.classList.add(className);\r\n  }\r\n\r\n  const afterTimeout = () => {\r\n    delete element.dataset.timeout;\r\n    if(!forwards && className) {\r\n      element.classList.remove('backwards', className);\r\n    }\r\n\r\n    element.classList.remove('animating');\r\n    \r\n    onTransitionEnd && onTransitionEnd();\r\n  };\r\n\r\n  if(!rootScope.settings.animationsEnabled || !duration) {\r\n    element.classList.remove('animating', 'backwards');\r\n    afterTimeout();\r\n    return;\r\n  }\r\n\r\n  element.classList.add('animating');\r\n\r\n  element.classList.toggle('backwards', !forwards);\r\n  element.dataset.timeout = '' + setTimeout(afterTimeout, duration);\r\n};\r\n\r\nexport default SetTransition;\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nexport default function toggleDisability(elements: HTMLElement[], disable: boolean): () => void {\r\n  if(disable) {\r\n    elements.forEach(el => el.setAttribute('disabled', 'true'));\r\n  } else {\r\n    elements.forEach(el => el.removeAttribute('disabled'));\r\n  }\r\n\r\n  return () => toggleDisability(elements, !disable);\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n * \r\n * Originally from:\r\n * https://github.com/zhukov/webogram\r\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\r\n * https://github.com/zhukov/webogram/blob/master/LICENSE\r\n */\r\n\r\nimport { MOUNT_CLASS_TO } from \"../../config/debug\";\r\nimport { MessageEntity } from \"../../layer\";\r\nimport RichTextProcessor from \"../../lib/richtextprocessor\";\r\nimport getRichElementValue from \"./getRichElementValue\";\r\n\r\nexport default function getRichValue(field: HTMLElement, withEntities = true) {\r\n  const lines: string[] = [];\r\n  const line: string[] = [];\r\n\r\n  const entities: MessageEntity[] = withEntities ? [] : undefined;\r\n  getRichElementValue(field, lines, line, undefined, undefined, entities);\r\n  if(line.length) {\r\n    lines.push(line.join(''));\r\n  }\r\n\r\n  let value = lines.join('\\n');\r\n  value = value.replace(/\\u00A0/g, ' ');\r\n\r\n  if(entities?.length) {\r\n    // ! cannot do that here because have the same check before the sending in RichTextProcessor.parseMarkdown\r\n    /* const entity = entities[entities.length - 1];\r\n    const length = value.length;\r\n    const trimmedLength = value.trimRight().length;\r\n    if(length !== trimmedLength) {\r\n      entity.length -= length - trimmedLength;\r\n    } */\r\n\r\n    RichTextProcessor.combineSameEntities(entities);\r\n    RichTextProcessor.sortEntities(entities);\r\n  }\r\n\r\n  //console.log('getRichValue:', value, entities);\r\n\r\n  return {value, entities};\r\n}\r\n\r\nMOUNT_CLASS_TO.getRichValue = getRichValue;\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nexport default function findUpTag(el: any, tag: string): HTMLElement {\r\n  return el.closest(tag);\r\n  /* if(el.tagName === tag) return el; // 03.02.2020\r\n\r\n  while(el.parentElement) {\r\n    el = el.parentElement;\r\n    if(el.tagName === tag) \r\n      return el;\r\n  }\r\n  return null; */\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nexport default function findUpAttribute(el: any, attribute: string): HTMLElement {\r\n  return el.closest(`[${attribute}]`);\r\n  /* if(el.getAttribute(attribute) !== null) return el; // 03.02.2020\r\n\r\n  while(el.parentElement) {\r\n    el = el.parentElement;\r\n    if(el.getAttribute(attribute) !== null) \r\n      return el;\r\n  }\r\n  return null; */\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n * \r\n * Originally from:\r\n * https://github.com/zhukov/webogram\r\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\r\n * https://github.com/zhukov/webogram/blob/master/LICENSE\r\n */\r\n\r\nimport { MessageEntity } from \"../../layer\";\r\n\r\nexport type MarkdownType = 'bold' | 'italic' | 'underline' | 'strikethrough' | 'monospace' | 'link' | 'mentionName' | 'spoiler';\r\nexport type MarkdownTag = {\r\n  match: string,\r\n  entityName: Extract<MessageEntity['_'], 'messageEntityBold' | 'messageEntityUnderline' | 'messageEntityItalic' | 'messageEntityPre' | 'messageEntityStrike' | 'messageEntityTextUrl' | 'messageEntityMentionName' | 'messageEntitySpoiler'>;\r\n};\r\n\r\n// https://core.telegram.org/bots/api#html-style\r\nexport const markdownTags: {[type in MarkdownType]: MarkdownTag} = {\r\n  bold: {\r\n    match: '[style*=\"bold\"], [style*=\"font-weight: 700\"], [style*=\"font-weight: 600\"], [style*=\"font-weight:700\"], [style*=\"font-weight:600\"], b, strong',\r\n    entityName: 'messageEntityBold'\r\n  },\r\n  underline: {\r\n    match: '[style*=\"underline\"], u, ins',\r\n    entityName: 'messageEntityUnderline'\r\n  },\r\n  italic: {\r\n    match: '[style*=\"italic\"], i, em',\r\n    entityName: 'messageEntityItalic'\r\n  },\r\n  monospace: {\r\n    match: '[style*=\"monospace\"], [face=\"monospace\"], pre',\r\n    entityName: 'messageEntityPre'\r\n  },\r\n  strikethrough: {\r\n    match: '[style*=\"line-through\"], strike, del, s',\r\n    entityName: 'messageEntityStrike'\r\n  },\r\n  link: {\r\n    match: 'A:not(.follow)',\r\n    entityName: 'messageEntityTextUrl'\r\n  },\r\n  mentionName: {\r\n    match: 'A.follow',\r\n    entityName: 'messageEntityMentionName'\r\n  },\r\n  spoiler: {\r\n    match: '[style*=\"spoiler\"]',\r\n    entityName: 'messageEntitySpoiler'\r\n  }\r\n};\r\n\r\nconst tabulationMatch = '[style*=\"table-cell\"], th, td';\r\n\r\n/* export function getDepth(child: Node, container?: Node) {\r\n  let depth = 0;\r\n\r\n  do {\r\n    if(child === container) {\r\n      return depth;\r\n    }\r\n\r\n    ++depth;\r\n  } while((child = child.parentNode) !== null);\r\n\r\n  return depth;\r\n} */\r\n\r\nconst BLOCK_TAG_NAMES = new Set([\r\n  'DIV',\r\n  'P',\r\n  'BR',\r\n  'LI',\r\n  'SECTION',\r\n  'H6',\r\n  'H5',\r\n  'H4',\r\n  'H3',\r\n  'H2',\r\n  'H1',\r\n  'TR'\r\n]);\r\n\r\nexport default function getRichElementValue(node: HTMLElement, lines: string[], line: string[], selNode?: Node, selOffset?: number, entities?: MessageEntity[], offset = {offset: 0}) {\r\n  if(node.nodeType === 3) { // TEXT\r\n    let nodeValue = node.nodeValue;\r\n\r\n    /* const tabulation = node.parentElement?.closest(tabulationMatch + ', [contenteditable]');\r\n    if(tabulation?.getAttribute('contenteditable') === null) {\r\n      nodeValue += ' ';\r\n      // line.push('\\t');\r\n      // ++offset.offset;\r\n    } */\r\n\r\n    if(selNode === node) {\r\n      line.push(nodeValue.substr(0, selOffset) + '\\x01' + nodeValue.substr(selOffset));\r\n    } else {\r\n      line.push(nodeValue);\r\n    }\r\n\r\n    if(entities && nodeValue.length) {\r\n      if(node.parentNode) {\r\n        const parentElement = node.parentElement;\r\n        \r\n        // let closestTag: MarkdownTag, closestElementByTag: Element, closestDepth = Infinity;\r\n        for(const type in markdownTags) {\r\n          const tag = markdownTags[type as MarkdownType];\r\n          const closest = parentElement.closest(tag.match + ', [contenteditable]');\r\n          if(closest?.getAttribute('contenteditable') !== null) {\r\n            /* const depth = getDepth(closest, parentElement.closest('[contenteditable]'));\r\n            if(closestDepth > depth) {\r\n              closestDepth = depth;\r\n              closestTag = tag;\r\n              closestElementByTag = closest;\r\n            } */\r\n            continue;\r\n          }\r\n\r\n          if(tag.entityName === 'messageEntityTextUrl') {\r\n            entities.push({\r\n              _: tag.entityName,\r\n              url: (closest as HTMLAnchorElement).href,\r\n              offset: offset.offset,\r\n              length: nodeValue.length\r\n            });\r\n          } else if(tag.entityName === 'messageEntityMentionName') {\r\n            entities.push({\r\n              _: tag.entityName,\r\n              offset: offset.offset,\r\n              length: nodeValue.length,\r\n              user_id: (closest as HTMLElement).dataset.follow.toUserId()\r\n            });\r\n          } else {\r\n            entities.push({\r\n              _: tag.entityName as any,\r\n              offset: offset.offset,\r\n              length: nodeValue.length\r\n            });\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    offset.offset += nodeValue.length;\r\n    return;\r\n  }\r\n\r\n  if(node.nodeType !== 1) { // NON-ELEMENT\r\n    return;\r\n  }\r\n\r\n  const isSelected = selNode === node;\r\n  const isBlock = BLOCK_TAG_NAMES.has(node.tagName);\r\n  if(isBlock && line.length) {\r\n    lines.push(line.join(''));\r\n    line.splice(0, line.length);\r\n    ++offset.offset;\r\n  } else if(node instanceof HTMLImageElement) {\r\n    const alt = node.alt;\r\n    if(alt) {\r\n      line.push(alt);\r\n      offset.offset += alt.length;\r\n    }\r\n  }\r\n\r\n  if(isSelected && !selOffset) {\r\n    line.push('\\x01');\r\n  }\r\n\r\n  const isTableCell = node.matches(tabulationMatch);\r\n  const wasEntitiesLength = entities?.length;\r\n\r\n  let curChild = node.firstChild as HTMLElement;\r\n  while(curChild) {\r\n    getRichElementValue(curChild, lines, line, selNode, selOffset, entities, offset);\r\n    curChild = curChild.nextSibling as any;\r\n  }\r\n\r\n  if(isSelected && selOffset) {\r\n    line.push('\\x01');\r\n  }\r\n\r\n  if(isTableCell && node.nextSibling) {\r\n    line.push(' ');\r\n    ++offset.offset;\r\n\r\n    // * combine entities such as url after adding space\r\n    if(wasEntitiesLength !== undefined) {\r\n      for(let i = wasEntitiesLength, length = entities.length; i < length; ++i) {\r\n        ++entities[i].length;\r\n      }\r\n    }\r\n  }\r\n\r\n  const wasLength = line.length;\r\n  if(isBlock && wasLength) {\r\n    lines.push(line.join(''));\r\n    line.splice(0, wasLength);\r\n    ++offset.offset;\r\n  }\r\n\r\n  if(wasLength && node.tagName === 'P' && node.nextSibling) {\r\n    lines.push('');\r\n    ++offset.offset;\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport getRichValue from \"./getRichValue\";\r\n\r\nexport default function isInputEmpty(element: HTMLElement) {\r\n  if(element.hasAttribute('contenteditable') || element.tagName !== 'INPUT') {\r\n    /* const value = element.innerText;\r\n\r\n    return !value.trim() && !serializeNodes(Array.from(element.childNodes)).trim(); */\r\n    return !getRichValue(element, false).value.trim();\r\n  } else {\r\n    return !(element as HTMLInputElement).value.trim();\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n * \r\n * Originally from:\r\n * https://github.com/zhukov/webogram\r\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\r\n * https://github.com/zhukov/webogram/blob/master/LICENSE\r\n */\r\n\r\nimport type { ApplyServerTimeOffsetTask } from './timeManager';\r\nimport { MOUNT_CLASS_TO } from '../../config/debug';\r\n// import { tsNow } from '../../helpers/date';\r\nimport sessionStorage from '../sessionStorage';\r\nimport apiManager from './mtprotoworker';\r\n\r\nexport class ServerTimeManager {\r\n  /* private midnightNoOffset: number;\r\n  private midnightOffseted: Date;\r\n\r\n  private midnightOffset: number; */\r\n\r\n  public serverTimeOffset: number; // in seconds\r\n  /* private timeParams: {\r\n    midnightOffset: number,\r\n    serverTimeOffset: number\r\n  }; */\r\n\r\n  constructor() {\r\n    /* const timestampNow = tsNow(true);\r\n    this.midnightNoOffset = timestampNow - (timestampNow % 86400);\r\n    this.midnightOffseted = new Date();\r\n    this.midnightOffseted.setHours(0, 0, 0, 0);\r\n    \r\n    this.midnightOffset = this.midnightNoOffset - (Math.floor(+this.midnightOffseted / 1000)); */\r\n\r\n    this.serverTimeOffset = 0;\r\n    /* this.timeParams = {\r\n      midnightOffset: this.midnightOffset,\r\n      serverTimeOffset: this.serverTimeOffset\r\n    }; */\r\n\r\n    sessionStorage.get('server_time_offset').then((to) => {\r\n      if(to) {\r\n        this.serverTimeOffset = to;\r\n        // this.timeParams.serverTimeOffset = to;\r\n      }\r\n    });\r\n\r\n    apiManager.addTaskListener('applyServerTimeOffset', (task: ApplyServerTimeOffsetTask) => {\r\n      this.serverTimeOffset = task.payload;\r\n    });\r\n  }\r\n}\r\n\r\nconst serverTimeManager = new ServerTimeManager();\r\nMOUNT_CLASS_TO && (MOUNT_CLASS_TO.serverTimeManager = serverTimeManager);\r\nexport default serverTimeManager;\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n * \r\n * Originally from:\r\n * https://github.com/zhukov/webogram\r\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\r\n * https://github.com/zhukov/webogram/blob/master/LICENSE\r\n */\r\n\r\nexport function bytesToHex(bytes: ArrayLike<number>) {\r\n  const length = bytes.length;\r\n  const arr: string[] = new Array(length);\r\n  for(let i = 0; i < length; ++i) {\r\n    arr[i] = (bytes[i] < 16 ? '0' : '') + (bytes[i] || 0).toString(16);\r\n  }\r\n  return arr.join('');\r\n}\r\n\r\nexport function bytesFromHex(hexString: string) {\r\n  const len = hexString.length;\r\n  const bytes = new Uint8Array(Math.ceil(len / 2));\r\n  let start = 0;\r\n\r\n  if(len % 2) { // read 0x581 as 0x0581\r\n    bytes[start++] = parseInt(hexString.charAt(0), 16);\r\n  }\r\n\r\n  for(let i = start; i < len; i += 2) {\r\n    bytes[start++] = parseInt(hexString.substr(i, 2), 16);\r\n  }\r\n\r\n  return bytes;\r\n}\r\n\r\nexport function bytesToBase64(bytes: number[] | Uint8Array) {\r\n  let mod3: number;\r\n  let result = '';\r\n\r\n  for(let nLen = bytes.length, nUint24 = 0, nIdx = 0; nIdx < nLen; ++nIdx) {\r\n    mod3 = nIdx % 3;\r\n    nUint24 |= bytes[nIdx] << (16 >>> mod3 & 24);\r\n    if(mod3 === 2 || nLen - nIdx === 1) {\r\n      result += String.fromCharCode(\r\n        uint6ToBase64(nUint24 >>> 18 & 63),\r\n        uint6ToBase64(nUint24 >>> 12 & 63),\r\n        uint6ToBase64(nUint24 >>> 6 & 63),\r\n        uint6ToBase64(nUint24 & 63)\r\n      );\r\n      nUint24 = 0;\r\n    }\r\n  }\r\n\r\n  return result.replace(/A(?=A$|$)/g, '=');\r\n}\r\n\r\nexport function uint6ToBase64(nUint6: number) {\r\n  return nUint6 < 26\r\n    ? nUint6 + 65\r\n    : nUint6 < 52\r\n      ? nUint6 + 71\r\n      : nUint6 < 62\r\n        ? nUint6 - 4\r\n        : nUint6 === 62\r\n          ? 43\r\n          : nUint6 === 63\r\n            ? 47\r\n            : 65;\r\n}\r\n\r\nexport function bytesCmp(bytes1: number[] | Uint8Array, bytes2: number[] | Uint8Array) {\r\n  const len = bytes1.length;\r\n  if(len !== bytes2.length) {\r\n    return false;\r\n  }\r\n\r\n  for(let i = 0; i < len; ++i) {\r\n    if(bytes1[i] !== bytes2[i]) {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  return true;\r\n}\r\n\r\nexport function bytesXor(bytes1: Uint8Array, bytes2: Uint8Array) {\r\n  const len = bytes1.length;\r\n  const bytes = new Uint8Array(len);\r\n\r\n  for(let i = 0; i < len; ++i) {\r\n    bytes[i] = bytes1[i] ^ bytes2[i];\r\n  }\r\n\r\n  return bytes;\r\n}\r\n\r\n/* export function bytesToArrayBuffer(b: number[]) {\r\n  return (new Uint8Array(b)).buffer;\r\n}\r\n\r\nexport function convertToArrayBuffer(bytes: any | ArrayBuffer | Uint8Array) {\r\n  // Be careful with converting subarrays!!\r\n  if(bytes instanceof ArrayBuffer) {\r\n    return bytes;\r\n  }\r\n  if(bytes.buffer !== undefined &&\r\n    bytes.buffer.byteLength === bytes.length * bytes.BYTES_PER_ELEMENT) {\r\n    return bytes.buffer;\r\n  }\r\n  return bytesToArrayBuffer(bytes);\r\n} */\r\n\r\nexport function convertToUint8Array(bytes: Uint8Array | ArrayBuffer | number[] | string): Uint8Array {\r\n  if(bytes instanceof Uint8Array) {\r\n    return bytes;\r\n  } else if(typeof(bytes) === 'string') {\r\n    return new TextEncoder().encode(bytes);\r\n  }\r\n\r\n  return new Uint8Array(bytes);\r\n}\r\n\r\n/* export function bytesFromArrayBuffer(buffer: ArrayBuffer) {\r\n  const len = buffer.byteLength;\r\n  const byteView = new Uint8Array(buffer);\r\n  const bytes: number[] = [];\r\n\r\n  for(let i = 0; i < len; ++i) {\r\n    bytes[i] = byteView[i];\r\n  }\r\n\r\n  return bytes;\r\n}\r\n\r\nexport function bufferConcat(buffer1: any, buffer2: any) {\r\n  const l1 = buffer1.byteLength || buffer1.length;\r\n  const l2 = buffer2.byteLength || buffer2.length;\r\n  const tmp = new Uint8Array(l1 + l2);\r\n  tmp.set(buffer1 instanceof ArrayBuffer ? new Uint8Array(buffer1) : buffer1, 0);\r\n  tmp.set(buffer2 instanceof ArrayBuffer ? new Uint8Array(buffer2) : buffer2, l1);\r\n\r\n  return tmp.buffer;\r\n} */\r\n\r\nexport function bufferConcats(...args: (ArrayBuffer | Uint8Array | number[])[]) {\r\n  const length = args.reduce((acc, v) => acc + ((v as ArrayBuffer).byteLength || (v as Uint8Array).length), 0);\r\n\r\n  const tmp = new Uint8Array(length);\r\n  \r\n  let lastLength = 0;\r\n  args.forEach(b => {\r\n    tmp.set(b instanceof ArrayBuffer ? new Uint8Array(b) : b, lastLength);\r\n    lastLength += (b as ArrayBuffer).byteLength || (b as Uint8Array).length;\r\n  });\r\n\r\n  return tmp/* .buffer */;\r\n}\r\n\r\nexport function bytesFromWordss(input: Uint32Array) {\r\n  const o = new Uint8Array(input.byteLength);\r\n  for(let i = 0, length = input.length * 4; i < length; ++i) {\r\n    o[i] = ((input[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff);\r\n  }\r\n\r\n  return o;\r\n}\r\n\r\nexport function bytesToWordss(input: Parameters<typeof convertToUint8Array>[0]) {\r\n  const bytes = convertToUint8Array(input);\r\n\r\n  const words: number[] = [];\r\n  for(let i = 0, len = bytes.length; i < len; ++i) {\r\n    words[i >>> 2] |= bytes[i] << (24 - (i % 4) * 8);\r\n  }\r\n\r\n  return new Uint32Array(words);\r\n}\r\n\r\n// * https://stackoverflow.com/a/52827031\r\n/* export const isBigEndian = (() => {\r\n  const array = new Uint8Array(4);\r\n  const view = new Uint32Array(array.buffer);\r\n  return !((view[0] = 1) & array[0]);\r\n})(); */\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n * \r\n * Originally from:\r\n * https://github.com/zhukov/webogram\r\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\r\n * https://github.com/zhukov/webogram/blob/master/LICENSE\r\n */\r\n\r\nimport { IS_TOUCH_SUPPORTED } from \"../../environment/touchSupport\";\r\n\r\nexport default function placeCaretAtEnd(el: HTMLElement, ignoreTouchCheck = false) {\r\n  if(IS_TOUCH_SUPPORTED && (!ignoreTouchCheck || document.activeElement !== el)) {\r\n    return;\r\n  }\r\n  \r\n  el.focus();\r\n  if(typeof window.getSelection !== \"undefined\" && typeof document.createRange !== \"undefined\") {\r\n    var range = document.createRange();\r\n    range.selectNodeContents(el);\r\n    range.collapse(false);\r\n    var sel = window.getSelection();\r\n    sel.removeAllRanges();\r\n    sel.addRange(range);\r\n    // @ts-ignore\r\n  } else if(typeof document.body.createTextRange !== \"undefined\") {\r\n    // @ts-ignore\r\n    var textRange = document.body.createTextRange();\r\n    textRange.moveToElementText(el);\r\n    textRange.collapse(false);\r\n    textRange.select();\r\n  }\r\n}\r\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport { HelpCountry, HelpCountryCode } from \"../layer\";\nimport I18n from \"../lib/langPack\";\n\nlet sortedCountries: HelpCountry[];\ntype PrefixCountry = {country: HelpCountry, code: HelpCountryCode};\nconst prefixes: Map<string, PrefixCountry> = new Map();\nlet maxPrefixLength = 0;\nconst setPrefix = (country: HelpCountry, code: HelpCountryCode, prefix: string = '') => {\n  prefix = code.country_code + prefix;\n  /* if(prefixes.has(prefix)) {\n    console.error('asdasdasd', prefixes.get(prefix), country, code);\n  } */\n  maxPrefixLength = Math.max(maxPrefixLength, prefix.length);\n  prefixes.set(prefix, {country, code});\n};\n\nexport function formatPhoneNumber(originalStr: string): {\n  formatted: string,\n  country: HelpCountry,\n  code: HelpCountryCode,\n  leftPattern: string\n} {\n  originalStr = originalStr || '';\n  \n  if(!prefixes.size) {\n    I18n.countriesList.forEach(country => {\n      country.country_codes.forEach(code => {\n        if(code.prefixes) {\n          code.prefixes.forEach(prefix => {\n            setPrefix(country, code, prefix);\n          });\n        } else {\n          setPrefix(country, code);\n        }\n      });\n    });\n  }\n\n  // return {formatted: originalStr, country: undefined as any, leftPattern: ''};\n  let str = originalStr.replace(/\\D/g, '');\n  let phoneCode = str.slice(0, maxPrefixLength);\n  \n  ////console.log('str', str, phoneCode);\n  // if(!sortedCountries) {\n  //   sortedCountries = I18n.countriesList.slice().sort((a, b) => b.country_codes[0].country_code.length - a.country_codes[0].country_code.length);\n  // }\n  \n  // let country = sortedCountries.find((c) => {\n  //   return c.country_codes.find((c) => phoneCode.indexOf(c.replace(/\\D/g, '')) === 0);\n  // });\n\n  let prefixCountry: PrefixCountry;\n  for(let i = phoneCode.length - 1; i >= 0; --i) { // lookup for country by prefix\n    prefixCountry = prefixes.get(phoneCode.slice(0, i + 1));\n    if(prefixCountry) {\n      break;\n    }\n  }\n\n  if(!prefixCountry) {\n    return {\n      formatted: str, \n      country: undefined, \n      code: undefined, \n      leftPattern: ''\n    };\n  }\n\n  // country = /* PhoneCodesMain[country.phoneCode] ||  */country;\n  const country = prefixCountry.country;\n  \n  const patterns = prefixCountry.code.patterns || [];\n  const searchForPattern = str.slice(prefixCountry.code.country_code.length); // splice country code\n  let pattern = '', mostMatchedPatternMatches = 0, mostMatchedPattern = '';\n  for(let i = patterns.length - 1; i >= 0; --i) {\n    pattern = patterns[i];\n\n    const _pattern = pattern.replace(/ /g, '');\n    let patternMatches = 0;\n    for(let k = 0, length = Math.min(searchForPattern.length, _pattern.length); k < length; ++k) {\n      if(searchForPattern[k] === _pattern[k] || _pattern[k] === 'X') {\n        ++patternMatches;\n      } else {\n        patternMatches = 0;\n        break;\n      }\n    }\n\n    if(patternMatches > mostMatchedPatternMatches) {\n      mostMatchedPatternMatches = patternMatches;\n      mostMatchedPattern = pattern;\n    }\n  }\n\n  pattern = mostMatchedPattern || pattern;\n  pattern = pattern.replace(/\\d/g, 'X');\n\n  pattern = prefixCountry.code.country_code + ' ' + pattern;\n  // let pattern = country.pattern || country.phoneCode;\n  pattern.split('').forEach((symbol, idx) => {\n    if(symbol === ' ' && str[idx] !== ' ' && str.length > idx) {\n      str = str.slice(0, idx) + ' ' + str.slice(idx);\n    }\n  });\n  \n  /* if(country.pattern) {\n    str = str.slice(0, country.pattern.length);\n  } */\n\n  let leftPattern = pattern && pattern.length > str.length ? pattern.slice(str.length) : '';\n  if(leftPattern) {\n    /* const length = str.length;\n    leftPattern = leftPattern.split('').map((_, idx) => (length + idx).toString().slice(-1)).join(''); */\n    leftPattern = leftPattern.replace(/X/g, '‒');\n    // leftPattern = leftPattern.replace(/X/g, '0');\n  }\n  \n  return {formatted: str, country, code: prefixCountry.code, leftPattern};\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\n// import { IS_WEB_WORKER } from \"../context\";\n\n// const id = IS_WEB_WORKER ? Math.random() * 0x1000 | 0 : 0;\nexport default function readBlobAs(blob: Blob, method: 'readAsText'): Promise<string>;\nexport default function readBlobAs(blob: Blob, method: 'readAsDataURL'): Promise<string>;\nexport default function readBlobAs(blob: Blob, method: 'readAsArrayBuffer'): Promise<ArrayBuffer>;\nexport default function readBlobAs(blob: Blob, method: 'readAsArrayBuffer' | 'readAsText' | 'readAsDataURL'): Promise<any> {\n  // const perf = performance.now();\n  return new Promise<any>((resolve) => {\n    const reader = new FileReader();\n    reader.addEventListener('loadend', (e) => {\n      // console.log(`readBlobAs [${id}] ${method} time ${performance.now() - perf}`);\n      resolve(e.target.result);\n    });\n    reader[method](blob);\n  });\n}\n"],"sourceRoot":""}